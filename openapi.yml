openapi: 3.1.0
info:
  title: "SERVERware"
  version: "4.8"
  description: "Documentation for the SERVERware API."
  
externalDocs:
  description: "SERVERware wiki"
  url: "https://wiki.bicomsystems.com/en/SERVERware"

servers:
  - url: "/api"

tags:
  - name: "api tokens"
  - name: "users"
  - name: "network subnets"
  - name: "templates"
  - name: "service types"
  - name: "hosts"
  - name: "flavors"
  - name: "partitions"
  - name: "vps manage"
  - name: "vps snapshots"
  - name: "vps interfaces"
  - name: "vps dns records"
  - name: "oci environments"
  - name: "vps volumes"

paths:
  '/users/{userid}/api-tokens':
    head:
      tags:
        - api tokens
      summary: "Check if user has api token"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/Name"
      responses:
        '200':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Not found"
      security:
        - apiKey: []
    get:
      tags:
        - api tokens
      summary: "Get api tokens for a specified user"
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        '200':
          $ref: "#/components/responses/TokenGet"
        '403':
          description: "Insufficient Permissions!"
        '400':
          description: "Failed to fetch API tokens (invalid user ID format)"
        '404':
          description: "Failed to fetch API tokens (no user with specified ID)"
        '500':
          description: "Failed to fetch API tokens"
      security:
        - apiKey: []
    post:
      tags:
        - api tokens
      summary: "Create api token for a specified user"
      parameters:
        - $ref: "#/components/parameters/UserId"
      requestBody:
        $ref: "#/components/requestBodies/TokenCreate"
      responses:
        '200':
          $ref: "#/components/responses/TokenCreate"
        '400':
          description: "Failed to create an API Token (name must not be empty)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to create an API Token (no user with specified ID)"
        '409':
          description: "Failed to create an API Token (name already exists)"
        '500':
          description: "Failed to create an API Token"
      security:
        - apiKey: []
    delete:
      tags:
        - api tokens
      summary: "Revoke all api tokens that belong to specified user"
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        '204':
          description: "No content"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to revoke API Tokens (user not found)"
        '500':
          description: "Failed to revoke API Tokens"
      security:
        - apiKey: []

  '/users/{userid}/api-tokens/{tokenid}':
    get:
      tags:
        - api tokens
      summary: "Get token by user and token id"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/TokenId"
      responses:
        '200':
          $ref: "#/components/responses/TokenGet"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: |
            Failed to fetch API token
            - no user with specified ID
            - no token with specified token ID and user ID            
        '500':
          description: "error"
      security:
        - apiKey: []
    delete:
      tags:
        - api tokens
      summary: "Revoke api token that belongs to specified user"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/TokenId"
      responses:
        '204':
          description: "No content"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: |
            Failed to revoke an API token
            - no user with specified ID
            - no token with specified token ID and user ID            
        '500':
          description: "Failed to revoke an API Token"
      security:
        - apiKey: []

  /users:
    head:
      tags:
        - users
      summary: "Check if user with given email exists"
      parameters:
        - $ref: "#/components/parameters/Email"
      responses:
        '200':
          description: "User exists"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "User not found"
      security:
        - apiKey: []
    get:
      tags:
        - users
      summary: "Get a list of users"
      responses:
        '200':
          $ref: "#/components/responses/UserResponseMultiple"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to get users"
      security:
        - apiKey: []
    post:
      tags:
        - users
      summary: "Create a new user"
      requestBody:
        $ref: "#/components/requestBodies/UserCreate"
      responses:
        '200':
          $ref: "#/components/responses/UserResponseSingle"
        '400':
          description: "Failed to add user (password must be at least 8 characters long)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to add user (role not found)"
        '409':
          description: "Failed to add user (email already in use)"
        '500':
          description: "Failed to add user"
      security:
        - apiKey: []

  '/users/{userid}':
    get:
      tags:
        - users
      summary: Get user info
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        '200':
          $ref: "#/components/responses/UserResponseSingle"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch user (no user with specified ID)"
        '500':
          description: "Failed to fetch user"
      security:
        - apiKey: []
    put:
      tags:
        - users
      summary: Update user info
      description: |
          Notes:
          - Password can be omitted to leave it unchaged.
          - TFA can only be changed by account owner.
      parameters:
        - $ref: "#/components/parameters/UserId"
      requestBody:
        $ref: "#/components/requestBodies/UserCreate"
      responses:
        '200':
          $ref: "#/components/responses/UserResponseSingle"
        '304': 
          description: "Not modified"
        '400':
          description: "Failed to update user (email cannot be changed)"
        '403':
          description: |
                      - Failed to update user (2fa settings can only be changed by account owner)
                      - Insufficient Permissions!
        '404':
          description: "Failed to update user (user not found)"
        '500':
          description: "Failed to update user"
      security:
        - apiKey: []
    delete:
      tags:
        - users
      summary: Delete User
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        '204':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to delete user (user not found)"
        '406':
          description: "Failed to delete user (user owns a VPS or you cannot delete yourself)"
        '500':
          description: "Failed to delete user"
      security:
        - apiKey: []

  '/users/{userid}/upgrade-role':
    post:
      tags:
        - users
      summary: "Upgrade user role"
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        '200':
          description: "OK"
        '304':
          description: "Not modified"
        '403':
          description: "Insufficient permissions"
        '404':
            description: "Failed to upgrade user role (no user with specified ID)."
        '500':
            description: "Failed to upgrade user role"
      security:
        - apiKey: []
  
  '/users/{userid}/downgrade-role':
    post:
      tags:
        - users
      summary: "Downgrade user role"
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        '200':
          description: "OK"
        '304':
          description: "Not modified"
        '403':
          description: "Insufficient Permissions!"
        '404':
            description: "Failed to upgrade user role (no user with specified ID)."
        '406':
            description: "Failed to downgrade role (you cannot downgrade yourself)."
        '500':
            description: "Failed to upgrade user role"
      security:
        - apiKey: []

  '/partitions/{partitionid}/users':
    get:
      tags:
        - users
      summary: "Get users from partition (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
      responses:
        '200':
          $ref: "#/components/responses/UserResponseMultiple"
        '400':
          description: "Failed to fetch partition members (invalid partition ID format)"
        '500':
          description: "Failed to fetch partition members"
      security:
        - apiKey: []
    post:
      tags:
        - users
      summary: "Create a new user in partition (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
      responses:
        '200':
          $ref: "#/components/responses/UserResponseSingle"
        '400':
          description: "Failed to add user (password must be at least 8 characters long)"
        '409':
          description: "Failed to add user (email already in use)"
        '500':
          description: "Failed to add partition member"
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                - type: object
                  properties:
                    password:
                      type: string
                - $ref: "#/components/schemas/User"
                - type: object
                  properties:
                    send_login_details:
                      type: boolean
      security:
        - apiKey: []
  '/partitions/{partitionid}/users/{userid}':
    get:
      tags:
        - users
      summary: "Get user from partition (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/UserId"
      responses:
        '200':
          $ref: "#/components/responses/UserResponseSingle"
        '404': 
          description: |
           Failed to fetch partition member
            - partition not  found
            - user not found
        '500':
          description: "Failed to fetch partition member"
      security:
        - apiKey: []
    put:
      tags:
        - users
      summary: Update user info (as partition administrator)
      description: |
                Notes:
                - Password can be omitted to leave it unchaged.
                - TFA can only be changed by account owner.                
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/UserId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                allOf:
                - type: object
                  properties:
                    password:
                      type: string
                - $ref: "#/components/schemas/User"
                - type: object
                  properties:
                    send_login_details:
                      type: boolean
      responses:
        '200':
            $ref: "#/components/responses/UserResponseSingle"
        '304': 
          description: "Not modified"
        '400':
          description: "Failed to update user (email cannot be changed)"
        '403':
          description: "Failed to update user (2fa settings can only be changed by account owner)"
        '404':
          description: "Failed to update user (user not found)"
        '500':
          description: "Failed to update user"
      security:
        - apiKey: []

  '/partitions/{partitionid}/members/{userid}':
    put:
      tags:
        - users
      summary: "Add user to partition"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/UserId"
      responses:
        '204':
          description: "No content"
        '404':
          description: "Failed to add member to partition (partition or user not found)"
        '406':
          description: "Can't add member to partition (number of partition members exceeds the partition quota)!"
        '409':
          description: "Failed to add member to partition (member already in partition)"
        '500':
          description: "Failed to add member to partition."
      security:
        - apiKey: []
    delete:
      tags:
        - users
      summary: "Remove user from partition"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/UserId"
      responses:
        "204":
          description: "No content"
        "404":
          description: "Failed to remove member from partition (user or partition or user's membership in the partition doesn't exist)"
        "406":
          description: "Failed to remove member from partition (you cannot remove yourself)."
        "500":
          description: "Failed to remove member from partition."
      security:
        - apiKey: []

  '/networks/1/subnets':
    get:
      tags:
        - network subnets
      summary: "Get all network subnets"
      responses:
        '200':
          $ref: "#/components/responses/SubnetResponseMultiple"
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch subnets"
      security:
        - apiKey: []

  '/partitions/{partitionid}/subnets':
    get:
      tags:
        - network subnets
      summary: "Get all network subnets (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
      responses:
        '200':
          $ref: "#/components/responses/SubnetResponseMultiple"
        '400':
          description: "Failed to fetch subnets for partition (invalid partition ID format)"
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch subnets for partition"
      security:
        - apiKey: []

  '/subnet-types':
    get:
      tags:
        - network subnets
      summary: "Get all subnet types"
      responses:
        '200':
          $ref: "#/components/responses/SubnetTypeResponseMultiple"
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch subnet types"
      security:
        - apiKey: []

  '/networks/1/subnets/{subnetid}/ip-addresses':
    get:
      tags:
        - network subnets
      summary: "Get all subnet IP addresses that can be reserved for partition"
      description: |
      parameters:
        - $ref: "#/components/parameters/SubnetIdPath"
        - $ref: "#/components/parameters/Status"
      responses:
        '200':
          $ref: "#/components/responses/SubnetIPAddressResponse"
        '400':
          description: "Failed to fetch addresses from IP pool (invalid subnet ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch addresses from IP pool (no subnet with specified ID)"
        '500':
          description: "Failed to fetch addresses from IP pool (failed to fetch subnet)"  
      security:
        - apiKey: []

  '/partitions/{partitionid}/subnets/{subnetid}/ip-addresses':
    get:
      tags:
          - network subnets
      summary: "Get all subnet IP addresses that can be assigned to VPS in specified partition"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/SubnetIdPath"
        - $ref: "#/components/parameters/StatusPartition"
      responses:
        '200':
          $ref: "#/components/responses/SubnetIPAddressResponse"
        '400':
          description: |
            Failed to fetch IP addresses belonging to partition
            - invalid partition ID format
            - invalid subnet ID format
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch IP addresses belonging to partition (no subnet with specified ID)"
        '500':
          description: "Failed to fetch IP addresses belonging to partition (failed to fetch subnet)"
      security:
        - apiKey: []

  '/registry-providers':
    get:
      tags:
        - templates
      summary: "Get all registries info"
      responses:
        '200':
          $ref: "#/components/responses/RegistryProvidersResponse"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch partition"
      security:
        - apiKey: []

  '/official-templates':
    get:
      tags:
        - templates
      parameters:
        - $ref: "#/components/parameters/TemplateType"
      summary: "Get official templates info"
      responses:
        '200':
          $ref: "#/components/responses/TemplateResponse"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch partition"
      security:
        - apiKey: []

  '/partitions/{partitionid}/official-templates':
    get:
      tags:
        - templates
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/TemplateType"
      summary: "Get official templates info"
      responses:
        '200':
          $ref: "#/components/responses/TemplateResponse"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch partition"
      security:
        - apiKey: []

  '/community-templates':
    get:
      tags:
        - templates
      summary: "Get community templates info"
      responses:
        '200':
          $ref: "#/components/responses/TemplateResponse"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch partition"
      security:
        - apiKey: []

  '/partitions/{partitionid}/community-templates':
    get:
      tags:
        - templates
      parameters:
        - $ref: "#/components/parameters/PartitionId"
      summary: "Get community templates info"
      responses:
        '200':
          $ref: "#/components/responses/TemplateResponse"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch partition"
      security:
        - apiKey: []

  '/service-types':
    get:
      tags:
        - service types
      summary: "Get all service types"
      responses:
        '200':
          $ref: "#/components/responses/ServiceTypeResponseMultiple"
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch service types"
      security:
        - apiKey: []

  '/networks/1/hosts':
    get:
      tags:
        - hosts  
      summary: "Get all hosts for a specified network"
      parameters:
        - $ref: "#/components/parameters/ServiceId"
      responses:
        '200':
          $ref: "#/components/responses/HostResponse"
        '400':
            description: "Failed to fetch hosts (invalid service ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
            description: "Failed to fetch hosts (no service type with specified ID)"
        '500':
            description: "Failed to fetch hosts"  
      security:
        - apiKey: []

  '/networks/1/settings/{nskey}':
    get:
      tags:
        - hosts
      summary: "Get network setting"
      parameters:
        - $ref: "#/components/parameters/NsKey"
      responses:
        '200':
          description: "Ok"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Nonexistent network setting"
        '500':
          description: "An error occurred while fetching network setting"
      security:
        - apiKey: []

  '/flavors':
    get:
      tags:
        - flavors
      summary: "Get all flavors"
      responses:
        '200':
          $ref: "#/components/responses/FlavorResponseMultiple"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch flavors"
      security:
        - apiKey: []
    post:
      tags:
        - flavors
      summary: "Create a flavor"
      description: |
        Notes:
          - Set CPULimit, I/O Limit, and IOPS Limit to 0 to indicate 'unlimited'        
      requestBody:
        $ref: "#/components/requestBodies/FlavorCreateRequest"
      responses:
        '200':
          $ref: "#/components/responses/FlavorResponseSingle"
        '400':
          description: |
            Failed to add flavor
            - name must be between 1 and 16 characters
            - CPU share must be one of: 256, 512, 1024
            - CPULimit must be one of: 0 (unlimited), 1, 2, 4, 8, 12, 16, 24, 32, 64
            - Memory must be between 1 and 65536 MB
            - Storage must be between 1 and 10000 GB
            - I/O limit must be one of: 0 (unlimited), 1, 5, 10, 20, 30, 40, 50, 75 MB/s
            - IOPS limit must be one of: 0 (unlimited), 100, 200, 300, 500, 1000
        '403':
          description: "Insufficient Permissions!"
        '409':
          description: "Failed to add flavor (name already in use)"
        '500':
          description: "Failed to add flavor"
      security:
        - apiKey: []

  '/flavors/{flavorid}':
    get:
      tags:
        - flavors
      summary: "Get flavor by id"
      parameters:
        - $ref: "#/components/parameters/FlavorId"
      responses:
        '200':
          $ref: "#/components/responses/FlavorResponseSingle"
        '400':
          description: "Failed to fetch flavor (invalid flavor ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch flavor (no flavor with specified ID)"
        '500':
          description: "Failed to fetch flavor"
      security:
          - apiKey: []
    put:
      tags: 
        - flavors
      summary: "Edit flavor"
      description: |
        Notes:
        - Set CPULimit, I/O Limit, and IOPS Limit to 0 to indicate 'unlimited'        
      parameters:
        - $ref: "#/components/parameters/FlavorId"
      requestBody:
        $ref: "#/components/requestBodies/FlavorCreateRequest"
      responses:
        '200':
          $ref: "#/components/responses/FlavorResponseSingle"
        '304':
          description: "Not modified"
        '400':
          description: |
            Failed to update flavor
            - invalid flavor ID format
            - name must be between 1 and 16 characters
            - CPU share must be one of: 256, 512, 1024
            - CPULimit must be one of: 0 (unlimited), 1, 2, 4, 8, 16, 32, 64
            - Memory must be between 1 and 65536 MB
            - Storage must be between 1 and 10000 GB
            - I/O limit must be one of: 0 (unlimited), 1, 5, 10, 20, 30, 40, 50, 75 MB/s
            - IOPS limit must be one of: 0 (unlimited), 100, 200, 300, 500            
        '404':
          description: "Failed to update flavor (no flavor with specified ID)"
        '403':
          description: "Insufficient Permissions!"
        '409':
          description: "Failed to update flavor (name already in use)"
        '500':
          description: "Failed to update flavor"
      security:
          - apiKey: []
    delete:
      tags:
        - flavors
      summary: "Delete flavor"
      parameters:
        - $ref: "#/components/parameters/FlavorId"
      responses:
        '204':
          description: "No content"
        '400':
          description: "Failed to delete flavor (invalid flavor ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to delete flavor (no flavor with specified ID)"
        '500':
          description: "Failed to delete flavor"
      security:
          - apiKey: []

  '/partitions/{partitionid}/flavors':
    get:
      tags:
        - flavors
      summary: "Get all flavors from a partition"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
      responses:
        '200':
          $ref: "#/components/responses/FlavorResponseMultiple"
        '400':
          description: "Failed to fetch partition flavors (invalid partition ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch partition flavors (no partition with specified ID)"
        '500':
          description: "Failed to fetch partition flavors"
      security:
        - apiKey: []

  '/partitions/{partitionid}/flavors/{flavorid}/enable':
    post:
      tags:
        - flavors
      summary: "Enable flavor for use in partition"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/FlavorId"
      responses:
        '200':
          description: "Succesfully enabled flavor in the partition"
        '400':
          description: |
            Failed to enable partition flavor
            - invalid partition ID format
            - invalid flavor ID format
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: |
            Failed to enable partition flavor
            - no partition with specified ID
            - no flavor with specified ID
        '500':
          description: "Failed to enable partition flavor"
      security:
        - apiKey: []

  '/partitions/{partitionid}/flavors/{flavorid}/disable':
    post:
      tags:
        - flavors
      summary: "Disable flavor for use in partition"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/FlavorId"
      responses:
        '200':
          description: "Succesfully disabled flavor in the partition"
        '400':
          description: |
            Failed to disable partition flavor
            - invalid partition ID format
            - invalid flavor ID format
        '404':
          description: |
            Failed to disable partition flavor
            - no partition with specified ID
            - no flavor with specified ID
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to disable partition flavor"
      security:
        - apiKey: []

  '/partitions/{partitionid}/enabled-flavors':
    get:
      tags:
        - flavors
      summary: "Get enabled flavors for the partition"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
      responses:
        '200':
          $ref: "#/components/responses/EnabledFlavorsResponse"
        '400':
          description: "Failed to fetch partition enabled flavors (invalid partition ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch partition enabled flavors (no partition with specified ID)"
        '500':
          description: "Failed to fetch partition enabled flavors"
      security:
        - apiKey: []

  '/networks/1/partitions':
    get:
      tags:
        - partitions
      summary: "Get all partitions info"
      responses:
        '200':
          $ref: "#/components/responses/PartitionResponseMultiple"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch partition"
      security:
        - apiKey: []
    post:
      tags:
        - partitions
      summary: "Create a new partition"
      requestBody:
        $ref: "#/components/requestBodies/PartitionCreateRequest"
      responses:
        '200':
          $ref: "#/components/responses/PartitionResponseSingle"
        '400': 
          description: |
            Failed to create partition:
              - name must not be empty
              - partition quota limits exceeded
        '403':
          description: "Insufficient Permissions!"
        '409':
          description: "Failed to create partition (name already in use)"
        '500':
          description: "Failed to create partition"
      security:
        - apiKey: []

  '/networks/1/partitions/{partitionid}':
    parameters:
        - $ref: "#/components/parameters/PartitionId"
    get:
      tags:
        - partitions
      summary: "Get partition info"
      responses:
        '200':
          $ref: "#/components/responses/PartitionResponseSingle"
        '400':
          description: "Failed to fetch partition (invalid partition ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch partition (no partition with specified ID)"
        '500':
          description: "Failed to fetch partition"
      security:
        - apiKey: []
    put:
      tags:
        - partitions
      summary: "Update partition info"
      requestBody:
        $ref: "#/components/requestBodies/PartitionUpdateRequest"
      responses:
        '200':
          $ref: "#/components/responses/PartitionUpdateResponse"
        '400':
          description: |
            Failed to update partition
            - invalid partition ID format
            - name must not be empty
            - partition quota limits exceeded
            - partition quota can't be reduced below currently used resources            
        '403':
          description: "Insufficient Permissions!"
        '409':
          description: |
            Failed to update partition
            - name already in use
            - dataset already exists            
        '500':
          description: "Failed to update partition"
      security:
        - apiKey: []
    delete:
      tags:
        - partitions
      summary: "Delete a partition"
      responses:
        '204':
          description: "OK"
        '400':
          description: "Failed to delete partition (invalid partition ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to delete partition (no partition with specified ID)"
        '406':
          description: "Failed to delete partition (partition has VPSs linked to it)"
        '500':
          description: "Failed to delete partition"
      security:
        - apiKey: []

  '/users/{userid}/partitions':
    get:
      tags:
        - partitions
      summary: "Get user partitions"
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        '200':
          $ref: "#/components/responses/UserPartitionResponseMultiple"
        '400':
          description: "Failed to fetch user partition (invalid user ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch user partitions (no user with specified ID)"
        '500':
          description: "Failed to fetch partitions"
      security:
        - apiKey: []
    
  '/users/{userid}/partitions/{partitionid}':
    get:
      tags:
        - partitions
      summary: "Get user partition"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/PartitionId"
      responses:
        '200':
          $ref: "#/components/responses/UserPartitionResponseSingle"
        '400':
          description: "Failed to fetch user partition (invalid user and/or partition ID format)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch user fetch partition (no user and/or user with specified ID)."
        '500':
            description: "Failed to fetch user partition"
      security:
        - apiKey: []

  '/networks/1/vpses':
    head:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsName"
      summary: "Check if VPS exists"
      responses:
        '200':
          description: "VPS exists"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "VPS not found"
      security:
        - apiKey: []
    get:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsState"
      summary: "Get all VPS info"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseMultiple"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch VPSes"
      security:
        - apiKey: []
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsVolumeOrigin"
        - $ref: "#/components/parameters/VpsVolumeSize"
        - $ref: "#/components/parameters/SourceVpsId"
      summary: "Create or clone VPS"
      description: |
              LXC engine can only be used for OFFICIAL PBXware templates.

              Temp and run directories must be at least 64MB each.

              Resource limits can be one of the following:
                - cpu_share: must match value set in flavor
                - mem_limit: must match value set in flavor
                - cpu_limit: 1, 2, 4, 8, 12, 16, 24, 32, 64
                - io_limit: 1, 5, 10, 20, 30, 40, 50, 75 (MB/s)
                - read_iops_limit and write_iops_limit combined: 100, 200, 300, 500, 1000              
      requestBody:
        $ref: "#/components/requestBodies/VpsCreateRequest"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseSingle"
        '401':
          description: |
                      Failed to create VPS (unathorized)

                      Failed to create VPS for partition:
                      - unauthorized
                      - body and path partition ID do not match                      
        '400':
          description: |
            Failed to create VPS:
              - engine type must be 'KVM' for 'COMMUNITY' and 'OCI' VPSes
              - must provide engine type, 'lxc' or 'kvm'
              - name must not be empty
              - VPS name already in use
              - root password must be at least 8 characters long
              - Template and OS ID can not be both specified
              - Template parameters don't match values associated with template ID
              - Flavor not enabled for specified domain
              - Flavor not found
              - invalid partition ID format
              - VPSs bust be in the same partition
              - Storage size must match value set in flavor
              - Unable to set custom tmp and run directory size when using KVM engine
              - CPU Share must match value set in flavor
              - Memory size must match value set in flavor
              - CPULimit must be one of: 0 (unlimited), 1, 2, 4, 8, 12, 16, 24, 32, 64
              - I/O limit must be one of: 0 (unlimited), 1, 5, 10, 20, 30, 40, 50, 75 MB/s
              - IOPS limit must be one of: 0 (unlimited), 100, 200, 300, 500, 1000            
        '403':
          description: "Insufficient Permissions!"
        '406': 
          description: |
            Failed to create VPS:
              - number of VPSs reached license limit
              - KVM is not licensed
              - number of partition VPSs exceeds the partition quota
              - partition memory quota exceeded
              - partition storage quota exceeded
              - /tmp directory must be at least 64MB
              - /run directory must be at least 64MB
              - please choose a template for the VPS            
        '500':
          description: |
                      Failed to fetch host for VPS

                      Failed to get template data

                      Failed to fetch source VPS OCI Environment Variables

                      Failed to get OCI template

                      Failed to add OCI configuration to db

                      Failed to fetch OCI Registry configuration from db

                      Failed to create VPS:
                        - unable to decode JSON payload
                        - partition dataset not configured
                        - Failed to fetch storage allocation for partition
                        - failed to fetch partition for VPS
                        - no available processing resource for VPS
                        - disallowed host state                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}':
    parameters:
    - $ref: "#/components/parameters/VpsId"
    get:
      tags:
        - vps manage
      summary: "Get VPS info"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseSingle"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to fetch VPS (no VPS with specified ID)"
        '500':
          description: "Failed to fetch VPS"
      security:
        - apiKey: []
    put:
      tags:
        - vps manage
      summary: "Edit VPS"
      description: |
                VPS editable fields include:
                - Name
                - Description
                - Engine Type
                - Password
                - Flavor and resource limits
                - Temporary and Run directory size
                - Backup
                - Protected mode
                
                All other fields must remain the same.                
      requestBody:
        $ref: "#/components/requestBodies/VpsEditRequest"
      responses:
        '202':
          $ref: "#/components/responses/VpsResponseSingle"
        '400':
          description: |
            Failed to edit VPS:
              - URL parameters do not match payload
              - cannot edit VPS while a task is in progress or if it's in 'BUILDING' state
              - must provide engine type, 'lxc' or 'kvm'
              - Selected properties cannot be changed while using KVM engine until the VPS is stopped
              - Invalid VPS UUID
              - name must not be empty
              - The specified VPS name is already in use!
              - root password must be at least 8 characters long
              - Template and OS ID can not be both specified
              - Flavor not enabled for specified domain
              - Flavor not found
              - VPS engine must be of type KVM or LXC
              - Storage size must match value set in flavor
              - Not allowed fields changed
              - CPU Share must match value set in flavor
              - Memory size must match value set in flavor
              - CPULimit must be one of: 0 (unlimited), 1, 2, 4, 8, 12, 16, 24, 32, 64
              - I/O limit must be one of: 0 (unlimited), 1, 5, 10, 20, 30, 40, 50, 75 MB/s
              - IOPS limit must be one of: 0 (unlimited), 100, 200, 300, 500, 1000            
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: |
                      Failed to edit VPS:
                        - KVM is not licensed
                        - /tmp directory must be at least 64MB
                        - /run directory must be at least 64MB                      
        '500':
          description: |
                      Failed to edit VPS:
                        - failed to fetch original VPS configuration                      
      security:
        - apiKey: []
    delete:
      tags:
        - vps manage
      summary: "Delete a VPS"
      responses:
        '202':
          description: "OK"
        '400':
          description: |
                      Failed to remove VPS:
                        - VPS already removed
                        - cannot remove VPS if it's not stopped or while it has a task in progress!
                        - protected VPS cannot be removed                      
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to remove VPS:
                        - Parsing path parameter failed                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsuuid}/backup-enable':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsUuid"
      summary: "Enable VPS backup"
      responses:
        '200':
          description: "OK"
        '400':
          description: "Failed to enable backup (VPS UUID isn't provided)"
        '401':
          description: "Failed to enable backup (unathorized)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to enable VPS backup"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsuuid}/backup-disable':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsUuid"
      summary: "Disable VPS backup"
      responses:
        '200':
          description: "OK"
        '400':
          description: "Failed to disable backup (VPS UUID isn't provided)"
        '401':
          description: "Failed to disable backup (unathorized)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to disable VPS backup"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/start':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Start VPS"
      requestBody:
        $ref: "#/components/requestBodies/StartVps"
      responses:
        '202':
          description: "OK"
        '400':
          description: "Cannot start VPS while a task is in progress (or while it's in a forbidden state)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to start VPS:
                        - failed to fetch host for VPS                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/stop':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Stop VPS"
      requestBody:
        $ref: "#/components/requestBodies/StopVps"
      responses:
        '202':
          description: "OK"
        '404':
          description: "Failed to stop VPS (VPS is removed)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to stop VPS:
                        - failed to fetch host for VPS                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/restart':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Restart VPS"
      requestBody:
        $ref: "#/components/requestBodies/StartVps"
      responses:
        '202':
          description: "OK"
        '404':
          description: "Failed to restart VPS (VPS is removed)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to restart VPS"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/extend':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Extend VPS"
      requestBody:
        $ref: "#/components/requestBodies/ExtendVps"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: |
            Failed to extend VPS: 
            - must be stopped
            - partition storage quota exceeded
            - provided volume UUID doesn't match VPS ID            
        '500':
          description: |
                      Failed to extend VPS:
                        - failed to fetch storage allocation for partition
                        - assertion failed                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/shrink':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Shrink VPS"
      requestBody:
        $ref: "#/components/requestBodies/ShrinkVps"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: |
                      Failed to shrink VPS volume:
                        - VPS must be stopped
                        - provided volume UUID doesn't match VPS ID                      
        '500':
          description: |
                      Failed to shrink VPS volume:
                        - assertion failed                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/licence':
    parameters:
    - $ref: "#/components/parameters/VpsId"
    get:
      tags:
        - vps manage
      summary: "Get VPS license"
      responses:
        '200':
          $ref: "#/components/responses/VpsLicenceResponseSingle"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch VPS licence"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/fstrim':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Trim VPS storage"
      responses:
        '202':
          description: "OK"
        '400':
          description: "Trim operation can only be executed on STOPPED VPSs"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to trim VPS storage"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/cancelfstrim':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Cancel VPS trim operation"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to cancel trimming VPS storage"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/chghost':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Change VPS host"
      requestBody:
        $ref: "#/components/requestBodies/MoveVps"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: "Failed to move VPS (source host ID identical to destination host ID)"
        '500':
          description: |
                      Failed to move VPS:
                        - couldn't obtain source host ID
                        - couldn't obtain destination host ID                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/chgdomain':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Change VPS domain"
      requestBody:
        $ref: "#/components/requestBodies/ChangeVpsDomain"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: |
                      Failed to change VPS partition:
                        - number of partition VPSs exceeds partition quota
                        - Partition memory quota exceeded
                        - Partition storage quota exceeded!
                        - Partition subnets do not match!
                        - Old partition ID does not match current partition ID                      
        '500':
          description: |
                      Failed to change VPS partition:
                        - destination partition ID assertion failed
                        - can't move VPS to partition
                        - source partition ID assertion failed                      
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/chgowner':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
      summary: "Change VPS owner"
      requestBody:
        $ref: "#/components/requestBodies/ChangeVpsOwner"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseSingle"
        '400':
          description: "Failed to change VPS owner (new owner isn't a domain member)."
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: "Failed to change VPS owner (old owner ID does not match current owner ID)"
        '500':
          description: |
                      Failed to change VPS owner:
                        - old owner ID assertion failed
                        - new owner ID assertion failed                      
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses':
    get:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsState"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Get all VPS info"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseMultiple"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch VPSes"
      security:
        - apiKey: []
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsVolumeOrigin"
        - $ref: "#/components/parameters/VpsVolumeSize"
        - $ref: "#/components/parameters/SourceVpsId"
      summary: "Create VPS"
      description: |
              LXC engine can only be used for OFFICIAL PBXware templates.

              Temp and run directories must be at least 64MB each.

              Resource limits can be one of the following:
                - cpu_share: must match value set in flavor
                - mem_limit: must match value set in flavor
                - cpu_limit: 1, 2, 4, 8, 12, 16, 24, 32, 64
                - io_limit: 1, 5, 10, 20, 30, 40, 50, 75 (MB/s)
                - read_iops_limit and write_iops_limit combined: 100, 200, 300, 500, 1000              
      requestBody:
        $ref: "#/components/requestBodies/VpsCreateRequest"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseSingle"
        '401':
          description: |
                      Failed to create VPS (unathorized)

                      Failed to create VPS for partition:
                      - unauthorized
                      - body and path partition ID do not match                      
        '400':
          description: |
            Failed to create VPS:
              - engine type must be 'KVM' for 'COMMUNITY' and 'OCI' VPSes
              - must provide engine type, 'lxc' or 'kvm'
              - name must not be empty
              - VPS name already in use
              - root password must be at least 8 characters long
              - Template and OS ID can not be both specified
              - Template parameters don't match values associated with template ID
              - Flavor not enabled for specified domain
              - Flavor not found
              - invalid partition ID format
              - VPSs bust be in the same partition
              - Storage size must match value set in flavor
              - Unable to set custom tmp and run directory size when using KVM engine
              - CPU Share must match value set in flavor
              - Memory size must match value set in flavor
              - CPULimit must be one of: 0 (unlimited), 1, 2, 4, 8, 12, 16, 24, 32, 64
              - I/O limit must be one of: 0 (unlimited), 1, 5, 10, 20, 30, 40, 50, 75 MB/s
              - IOPS limit must be one of: 0 (unlimited), 100, 200, 300, 500, 1000            
        '403':
          description: "Insufficient Permissions!"
        '406': 
          description: |
            Failed to create VPS:
              - number of VPSs reached license limit
              - KVM is not licensed
              - number of partition VPSs exceeds the partition quota
              - partition memory quota exceeded
              - partition storage quota exceeded
              - /tmp directory must be at least 64MB
              - /run directory must be at least 64MB
              - please choose a template for the VPS            
        '500':
          description: |
                      Failed to fetch host for VPS

                      Failed to get template data

                      Failed to fetch source VPS OCI Environment Variables

                      Failed to get OCI template

                      Failed to add OCI configuration to db

                      Failed to fetch OCI Registry configuration from db

                      Failed to create VPS:
                        - unable to decode JSON payload
                        - partition dataset not configured
                        - Failed to fetch storage allocation for partition
                        - failed to fetch partition for VPS
                        - no available processing resource for VPS
                        - disallowed host state                      
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}':
    parameters:
    - $ref: "#/components/parameters/VpsId"
    - $ref: "#/components/parameters/PartitionId"
    get:
      tags:
        - vps manage
      summary: "Get VPS info"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseSingle"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to fetch VPS"
      security:
        - apiKey: []
    put:
      description: |
                VPS editable fields include:
                - Name
                - Description
                - Engine Type
                - Password
                - Flavor (making sure limit values match the ones for the chosen flavor)
                
                All other fields must remain the same.                
      tags:
        - vps manage
      summary: "Edit VPS"
      responses:
        '202':
          $ref: "#/components/responses/VpsResponseSingle"
        '400':
          description: |
            Failed to edit VPS:
              - URL parameters do not match payload
              - cannot edit VPS while a task is in progress or if it's in 'BUILDING' state
              - must provide engine type, 'lxc' or 'kvm'
              - Selected properties cannot be changed while using KVM engine until the VPS is stopped
              - Invalid VPS UUID
              - name must not be empty
              - The specified VPS name is already in use!
              - root password must be at least 8 characters long
              - Template and OS ID can not be both specified
              - Flavor not enabled for specified domain
              - Flavor not found
              - VPS engine must be of type KVM or LXC
              - Storage size must match value set in flavor
              - Not allowed fields changed
              - CPU Share must match value set in flavor
              - Memory size must match value set in flavor
              - CPULimit must be one of: 0 (unlimited), 1, 2, 4, 8, 12, 16, 24, 32, 64
              - I/O limit must be one of: 0 (unlimited), 1, 5, 10, 20, 30, 40, 50, 75 MB/s
              - IOPS limit must be one of: 0 (unlimited), 100, 200, 300, 500, 1000            
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: |
                      Failed to edit VPS:
                        - KVM is not licensed
                        - /tmp directory must be at least 64MB
                        - /run directory must be at least 64MB                      
        '500':
          description: |
                      Failed to edit VPS:
                        - failed to fetch original VPS configuration                      
      security:
        - apiKey: []
    delete:
      tags:
        - vps manage
      summary: "Delete a VPS"
      responses:
        '202':
          description: "OK"
        '400':
          description: |
                      Failed to remove VPS:
                        - VPS already removed
                        - cannot remove VPS if it's not stopped or while it has a task in progress!
                        - protected VPS cannot be removed                      
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to remove VPS:
                        - Parsing path parameter failed                      
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/start':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Start VPS"
      requestBody:
        $ref: "#/components/requestBodies/StartVps"
      responses:
        '202':
          description: "OK"
        '400':
          description: "Cannot start VPS while a task is in progress (or while it's in a forbidden state)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to start VPS:
                        - failed to fetch host for VPS                      
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/stop':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Stop VPS"
      requestBody:
        $ref: "#/components/requestBodies/StopVps"
      responses:
        '202':
          description: "OK"
        '404':
          description: "Failed to stop VPS (VPS is removed)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to stop VPS:
                        - failed to fetch host for VPS                      
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/restart':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Restart VPS"
      requestBody:
        $ref: "#/components/requestBodies/StartVps"
      responses:
        '202':
          description: "OK"
        '404':
          description: "Failed to restart VPS (VPS is removed)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to restart VPS"
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/extend':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Extend VPS"
      requestBody:
        $ref: "#/components/requestBodies/ExtendVps"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: |
            Failed to extend VPS: 
            - must be stopped
            - partition storage quota exceeded
            - provided volume UUID doesn't match VPS ID            
        '500':
          description: |
                      Failed to extend VPS:
                        - failed to fetch storage allocation for partition
                        - assertion failed                      
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/shrink':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Shrink VPS"
      requestBody:
        $ref: "#/components/requestBodies/ShrinkVps"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: |
                      Failed to shrink VPS volume:
                        - VPS must be stopped
                        - provided volume UUID doesn't match VPS ID                      
        '500':
          description: |
                      Failed to shrink VPS volume:
                        - assertion failed                      
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/fstrim':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Trim VPS storage"
      responses:
        '202':
          description: "OK"
        '400':
          description: "Trim operation can only be executed on STOPPED VPSs"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to trim VPS storage"
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/cancelfstrim':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Cancel VPS trim operation"
      responses:
        '202':
          description: "OK"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: "Failed to cancel trimming VPS storage"
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/chgowner':
    post:
      tags:
        - vps manage
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/PartitionId"
      summary: "Change VPS owner"
      requestBody:
        $ref: "#/components/requestBodies/ChangeVpsOwner"
      responses:
        '200':
          $ref: "#/components/responses/VpsResponseSingle"
        '400':
          description: "Failed to change VPS owner (new owner isn't a domain member)."
        '403':
          description: "Insufficient Permissions!"
        '406':
          description: "Failed to change VPS owner (old owner ID does not match current owner ID)"
        '500':
          description: |
                      Failed to change VPS owner:
                        - old owner ID assertion failed
                        - new owner ID assertion failed
      security:
        - apiKey: []

  '/vps-volumes/{voluuid}/snapshots':
    get:
      tags:
        - vps snapshots
      parameters:
        - $ref: "#/components/parameters/VolumeUuid"
      summary: "Get volume snapshots"
      responses:
        '200':
          $ref: "#/components/responses/SnapshotResponseMultiple"
        '400':
          description: "Failed to fetch VPS Volume snapshots (empty volume UUID)."
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch VPS Volume snapshots."
      security:
        - apiKey: []
    post:
      tags:
        - vps snapshots
      summary: "Create a new volume snapshot"
      parameters:
        - $ref: "#/components/parameters/VolumeUuid"
      requestBody:
        $ref: "#/components/requestBodies/SnapshotCreateRequest"
      responses:
        '202':
          description: "Volume snapshot created successfully"
        '400': 
          description: |
            Failed to create VPS Volume snapshot
            - empty snapshot name
            - empty volume UUID
            - invalid payload
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to create VPS Volume snapshot (no VPS Volume with specified ID)."
        '500':
          description: "Failed to create VPS Volume snapshot."
      security:
        - apiKey: []
    delete:
      tags:
        - vps snapshots
      summary: "Delete volume snapshots"
      parameters:
        - $ref: "#/components/parameters/VolumeUuid"
      responses:
        '204':
          description: "No content"
        '400':
          description: "Failed to delete all VPS Volume snapshots (empty volume UUID)."
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to delete all VPS Volume snapshots (no VPS volume with specified ID)"
        '500':
          description: "Failed to delete all VPS Volume snapshots."
      security:
        - apiKey: []
     
  '/vps-volumes/{voluuid}/snapshots/{snapuuid}':
    get:
      tags:
        - vps snapshots
      summary: "Get volume snapshot"
      parameters:
        - $ref: "#/components/parameters/VolumeUuid"
        - $ref: "#/components/parameters/SnapUuid"
      responses:
        '200':
          $ref: "#/components/responses/SnapshotResponseSingle"
        '400': 
          description: |
            Failed to fetch VPS Volume snapshot
            - empty volume UUID
            - empty snapshot UUID
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch VPS Volume snapshot."
      security:
        - apiKey: []
    put:
      tags:
        - vps snapshots
      parameters:
        - $ref: "#/components/parameters/VolumeUuid"
        - $ref: "#/components/parameters/SnapUuid"
      summary: "Update volume snapshot"
      requestBody:
        $ref: "#/components/requestBodies/SnapshotUpdateRequest"
      responses:
        '200':
          description: "OK"
        '400': 
          description: |
            Failed to update VPS Volume snapshot
            - empty volume UUID
            - empty snapshot UUID
            - empty snapshot name
            - invalid payload
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to update VPS Volume snapshot (no VPS Volume Snapshot with specified UUID)"
        '500':
          description: "Failed to update VPS Volume snapshot."
      security:
        - apiKey: []
    delete:
      tags:
        - vps snapshots
      summary: "Delete volume snapshot"
      parameters:
        - $ref: "#/components/parameters/VolumeUuid"
        - $ref: "#/components/parameters/SnapUuid"
      responses:
        '204':
          description: "No content"
        '400':
          description: |
            Failed to delete VPS Volume snapshot
            - empty volume UUID
            - empty snapshot UUID
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to delete VPS Volume snapshot
            - no VPS snapshot with specified UUID
            - no VPS volume with specified ID
        '500':
          description: "Failed to delete VPS Volume snapshot."
      security:
        - apiKey: []

  '/vps-volumes/{voluuid}/snapshots/{snapuuid}/rollback':
    post:
      tags:
        - vps snapshots
      parameters:
        - $ref: "#/components/parameters/VolumeUuid"
        - $ref: "#/components/parameters/SnapUuid"
      summary: "Rollback to snapshot"
      responses:
        '202':
          description: "Accepted"
        '400':
          description: |
            Failed to rollback VPS Volume
            - empty volume UUID
            - empty snapshot UUID
        '403':
          description: "Insufficient permissions"
        '404': 
          description: "Failed to rollback VPS Volume (no VPS snapshot with specified UUID)."
        '409': 
          description: |
            Failed to rollback VPS Volume
            - VPS not in STOPPED state
            - snapshot dependent clones exist
        '500':
          description: "Failed to rollback VPS Volume."
      security:
        - apiKey: []

  '/partitions/{partitionid}/vps-volumes/{voluuid}/snapshots':
    get:
      tags:
        - vps snapshots
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VolumeUuid"
      summary: "Get volume snapshots"
      responses:
        '200':
          $ref: "#/components/responses/SnapshotResponseMultiple"
        '400':
          description: |
            Failed to fetch VPS Volume snapshots
            - invalid partition ID format
            - empty volume UUID
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch VPS Volume snapshots."
      security:
        - apiKey: []
    post:
      tags:
        - vps snapshots
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VolumeUuid"
      summary: "Create a new volume snapshot"
      requestBody:
        $ref: "#/components/requestBodies/SnapshotCreateRequest"
      responses:
        '202':
          description: "Volume snapshot created successfully"
        '400':
          description: |
            Failed to create VPS Volume snapshot
            - invalid partition ID format
            - empty snapshot name
            - empty volume UUID
            - invalid payload
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to create VPS Volume snapshot (no VPS Volume with specified ID)."
        '500':
          description: "Failed to create VPS Volume snapshot."
      security:
        - apiKey: []
    delete:
      tags:
        - vps snapshots
      summary: "Delete volume snapshots"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VolumeUuid"
      responses:
        '204':
          description: "No content"
        '400':
          description: | 
            Failed to delete all VPS Volume snapshots
            - invalid partition ID format
            - empty volume UUID
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to delete all VPS Volume snapshots (no VPS volume with specified ID)."
        '500':
          description: "Failed to delete all VPS Volume snapshots."
      security:
        - apiKey: []
    
  '/partitions/{partitionid}/vps-volumes/{voluuid}/snapshots/{snapuuid}':
    put:
      tags:
        - vps snapshots
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VolumeUuid"
        - $ref: "#/components/parameters/SnapUuid"
      summary: "Update volume snapshot"
      requestBody:
        $ref: "#/components/requestBodies/SnapshotUpdateRequest"
      responses:
        '200':
          description: "OK"
        '400': 
          description: |
            Failed to update VPS Volume snapshot
            - invalid partition ID format
            - empty volume UUID
            - empty snapshot UUID
            - empty snapshot name
            - invalid payload
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to update VPS Volume snapshot."
      security:
        - apiKey: []
    delete:
      tags:
        - vps snapshots
      summary: "Delete volume snapshot"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VolumeUuid"
        - $ref: "#/components/parameters/SnapUuid"
      responses:
        '204':
          description: "No content"
        '400':
          description: | 
            Failed to delete VPS Volume snapshot
            - invalid partition ID format
            - empty volume UUID
            - empty snapshot UUID
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to delete VPS Volume snapshot
            - no VPS snapshot with specified UUID
            - no VPS volume with specified ID
        '500':
          description: "Failed to delete VPS Volume snapshot."
      security:
        - apiKey: []

  '/partitions/{partitionid}/vps-volumes/{voluuid}/snapshots/{snapuuid}/rollback':
    post:
      tags:
        - vps snapshots
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VolumeUuid"
        - $ref: "#/components/parameters/SnapUuid"
      summary: "Rollback to snapshot"
      responses:
        '202':
          description: "Accepted"
        '400': 
          description: |
            Failed to rollback VPS Volume
            - invalid partition ID format
            - empty volume UUID
            - empty snapshot UUID
        '404': 
          description: " Failed to rollback VPS Volume (no VPS snapshot with specified UUID)."
        '409': 
          description: |
            Failed to rollback VPS Volume
            - VPS not in STOPPED state
            - snapshot dependent clones exist
        '500':
          description: "Failed to rollback VPS Volume."
      security:
        - apiKey: []

  '/networks/1/vpses/interfaces/check-ipv6':
    head:
      tags:
        - vps interfaces
      summary: "Check IPV6 address existence"
      parameters:
        - $ref: "#/components/parameters/SubnetId"
        - $ref: "#/components/parameters/Address"
      responses:
        '200':
          description: "IPv6 address exists in given subnet"
        '400':
          description: |
            Failed to check IPv6 address
            - invalid subnet ID format
            - the address does not belong to the given subnet
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to check IPv6 address
            - no subnet with specified ID
            - IPv6 address does not exist in given subnet
        '500':
          description: "Failed to check IPv6 address (failed to fetch subnet)"
      security:
        - apiKey: []

  '/networks/1/vpses/interfaces/check-mac':
    head:
      tags:
        - vps interfaces
      summary: "Check MAC address existence"
      parameters:
        - $ref: "#/components/parameters/Address"
      responses:
        '200':
          description: "MAC address exists already"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "MAC address doesn't exist"
      security:
        - apiKey: []
  '/networks/1/vpses/{vpsid}/interfaces':
    get:
      tags:
        - vps interfaces
      summary: "Get all interfaces for a specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
      responses:
        '200':
          $ref: "#/components/responses/VPSInterfaceResponseMultiple"
        '400':
          description: "Failed to fetch VPS interfaces (invalid vps ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch VPS interfaces (no VPS with specified ID)"
        '500':
          description: "Failed to fetch VPS interfaces"
      security:
        - apiKey: []
    post:
      tags:
        - vps interfaces
      summary: "Create interface for specified VPS"
      description: |
        **Notes:**
        
        - Only one VPS interface can be set as the *default gateway*
        
        - **Required fields for the request body:**
          - subnet_id
          - name
          - default_gateway
          - at least one of address or address_ipv6
      parameters:
        - $ref: "#/components/parameters/VpsId"
      requestBody:
        $ref: "#/components/requestBodies/VPSInterfaceCreate"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VPSInterface"
        '400':
          description: |
            Failed to add VPS network interface
             - incorrect payload
             - invalid interface format
             - invalid VPS ID format
             - virtnet interface cannot be default gateway
             - failed to fetch IP address reservation
             - name already in use
             - conflict between subnet type and interface name
             - IPv4 address does not belong to the given subnet
             - IPv6 address does not belong to the given subnet
             - IPv4 address already in use
             - IPv6 address already in use
             - MAC address already in use
             - domains do not match. Network configuration will be stripped from VPS.            
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to add VPS network interface
             - no VPS with specified ID
             - no subnet with specified ID for VPS
        '409':
          description: "Networking cannot be changed while using KVM engine until the VPS is stopped"
        '500':
          description: |
            Failed to add VPS network interface
              - failed to fetch VPS
              - failed to check address usage
              - failed to check if default gateway exists
              - failed to check if interface exists by name
              - failed to fetch subnet for VPS
              - failed to fetch subnet type
              - failed to allocate address for VPS
              - failed to add an interface to VPS
              - failed to add VPS to IPv4 VPN on Controller
              - failed to add VPS to IPv6 VPN on Controller
              - failed to allocate address for VPS
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/interfaces/{ifname}':
    get:
      tags:
        - vps interfaces
      summary: "Get interface by name for the specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/IfaceName"
      responses:
        '200':
          $ref: "#/components/responses/VPSInterfaceResponseSingle"
        '400':
          description: "Failed  to fetch VPS interface (invalid VPS ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to fetch VPS interface:
            - no VPS interface with specified name
            - no VPS with specified ID
        '500':
          description: "Failed to fetch VPS interface"
      security:
        - apiKey: []
    put:
      tags:
        - vps interfaces
      summary: "Edit interface by name for the specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/IfaceName"
      requestBody:
        $ref: "#/components/requestBodies/VPSInterfaceCreate"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VPSInterface"
        '400':
          description: |
            Failed to update VPS network interface
             - incorrect payload
             - invalid interface format
             - invalid VPS ID format
             - cannot change interface name
             - cannot change interface subnet
             - virtnet interface cannot be default gateway
             - failed to fetch IP address reservation
             - conflict between subnet type and interface name
             - IPv4 address does not belong to the given subnet
             - IPv6 address does not belong to the given subnet
             - IPv4 address already in use
             - IPv6 address already in use
             - MAC address already in use
             - domains do not match. Network configuration will be stripped from VPS.
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to update VPS network interface
             - no VPS with specified ID
             - no subnet with specified ID for VPS
             - no interface with specified name for VPS

        '409':
          description: |
            Failed to update VPS network interface
            - Networking cannot be changed while using KVM engine until the VPS is stopped
            - cannot update VPS interface while a task is in progress or if VPS is in 'BUILDING' state
        '500':
          description: |
            Failed to update VPS network interface
              - failed to fetch VPS
              - fetching old interface of VPS failed
              - failed to check address usage
              - failed to fetch subnet
              - failed to fetch subnet type
              - failed to allocate address for VPS
              - failed to add VPS to IPv4 VPN on Controller
              - failed to add VPS to IPv6 VPN on Controller
              - failed to allocate address for VPS
              - failed to update interface of VPS
      security:
        - apiKey: []
    delete:
      tags:
        - vps interfaces
      summary: "Delete interface by name for specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/IfaceName"
      responses:
        '204':
          description: "No content"
        '400':
          description: "Failed to remove VPS interface (invalid VPS ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to remove VPS interface
             - no VPS with specified ID
             - no interface with specified name for VPS
        '409':
          description: "Networking cannot be changed while using KVM engine until the VPS is stopped"
        '500':
          description: |
            Failed to remove VPS interface
             - failed to fetch VPS
             - failed to fetch old interface of VPS
             - failed to fetch subnet for VPS
             - failed fetching subnet type
             - failed to release address for VPS
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/interfaces/check-ipv6':
    head:
      tags:
        - vps interfaces
      summary: "Check IPV6 address existence (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/SubnetId"
        - $ref: "#/components/parameters/Address"
      responses:
        '200':
          description: "IPv6 address exists in given subnet"
        '400':
          description: |
            Failed to check IPv6 address
              - invalid partition ID format
              - invalid subnet ID format
              - the address does not belong to the given subnet
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to check IPv6 address
              - no partition with specified ID
              - no subnet with specified ID
              - IPv6 address does not exist in the specified subnet
        '500':
          description: |
            Failed to check IPv6 address
              - failed to fetch subnet
      security:
        - apiKey: []
  '/partitions/{partitionid}/vpses/interfaces/check-mac':
    head:
      tags:
        - vps interfaces
      summary: "Check MAC address existence (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/Address"
      responses:
        '200':
          description: "MAC address exists already"
        '400':
          description: "Failed to check MAC address (invalid partition ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           - "MAC address doesn't exist"
           - "Failed to check MAC address (no partition with specified ID)"
      security:
        - apiKey: []
  '/partitions/{partitionid}/vpses/{vpsid}/interfaces':
    get:
      tags:
        - vps interfaces
      summary: "Get all interfaces for a specified VPS (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
      responses:
        '200':
          $ref: "#/components/responses/VPSInterfaceResponseMultiple"
        '400':
          description: |
            Failed to fetch VPS interfaces
            - invalid vps ID format
            - invalid partition ID format
            - VPS does not belong to specified partition
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch VPS interfaces (no partition with specified ID)"
        '500':
          description: "Failed to fetch VPS interfaces"
      security:
        - apiKey: []
    post:
      tags:
      - vps interfaces
      summary: "Create interface for specified VPS (as partition administrator)"
      description: |
        **Notes:**
        
        - Only one VPS interface can be set as the *default gateway*
        
        - **Required fields for the request body:**
          - subnet_id
          - name
          - default_gateway
          - at least one of address or address_ipv6
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
      requestBody:
        $ref: "#/components/requestBodies/VPSInterfaceCreate"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VPSInterface"
        '400':
          description: |
            Failed to add VPS network interface
            - invalid partition ID format
            - incorrect payload
            - invalid interface format
            - invalid VPS ID format
            - virtnet interface cannot be default gateway
            - failed to fetch IP address reservation
            - name already in use
            - conflict between subnet type and interface name
            - IPv4 address does not belong to the given subnet
            - IPv6 address does not belong to the given subnet
            - IPv4 address already in use
            - IPv6 address already in use
            - MAC address already in use
            - domains do not match. Network configuration will be stripped from VPS.
            - VPS does not belong to specified partition           
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to add VPS network interface
            - no partition with specified ID
            - no VPS with specified ID
            - no subnet with specified ID for VPS
                        
        '409':
          description: "Networking cannot be changed while using KVM engine until the VPS is stopped"
        '500':
          description: |
            Failed to add VPS network interface
              - failed to fetch VPS
              - failed to check address usage
              - failed to check if interface exists by name
              - failed to fetch subnet for VPS
              - failed to check if default gateway exists
              - failed to fetch subnet type
              - failed to allocate address for VPS
              - failed to add an interface to VPS
              - failed to add VPS to IPv4 VPN on Controller
              - failed to add VPS to IPv6 VPN on Controller
              - failed to allocate address for VPS
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/interfaces/{ifname}':
    put:
      tags:
        - vps interfaces
      summary: "Edit interface by name for the specified VPS (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/IfaceName"
      requestBody:
        $ref: "#/components/requestBodies/VPSInterfaceCreate"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VPSInterface"
        '400':
          description: |
            Failed to update VPS network interface
             - invalid partition ID format
             - incorrect payload
             - invalid interface format
             - invalid VPS ID format
             - cannot change interface name
             - cannot change interface subnet
             - virtnet interface cannot be default gateway
             - failed to fetch IP address reservation
             - conflict between subnet type and interface name
             - IPv4 address does not belong to the given subnet
             - IPv6 address does not belong to the given subnet
             - IPv4 address already in use
             - IPv6 address already in use
             - MAC address already in use
             - domains do not match. Network configuration will be stripped from VPS.
             - VPS does not belong to specified partition
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to update VPS network interface
             - no partition with specified ID
             - no VPS with specified ID
             - no subnet with specified ID for VPS
             - no interface with specified name for VPS               
        '409':
          description: |
            Failed to update VPS network interface
            - Networking cannot be changed while using KVM engine until the VPS is stopped
            - cannot update VPS interface while a task is in progress or if VPS is in 'BUILDING' state            
        '500':
          description: |
            Failed to update VPS network interface
              - failed to fetch VPS
              - fetching old interface of VPS failed
              - failed to check address usage
              - failed to fetch subnet
              - failed to fetch subnet type
              - failed to allocate address for VPS
              - failed to add VPS to IPv4 VPN on Controller
              - failed to add VPS to IPv6 VPN on Controller
              - failed to allocate address for VPS
              - failed to update interface of VPS
      security:
        - apiKey: []
    delete:
      tags:
        - vps interfaces
      summary: "Delete interface by name for specified VPS (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/IfaceName"
      responses:
        '204':
          description: "No content"
        '400':
          description: |
            Failed to remove VPS interface
            - invalid VPS ID format
            - invalid partition ID format
            - VPS does not belong to specified partition
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
            Failed to remove VPS interface
             - no partition with specified ID
             - no VPS with specified ID
             - no interface with specified name for VPS
        '409':
          description: "Networking cannot be changed while using KVM engine until the VPS is stopped"
        '500':
          description: |
            Failed to remove VPS interface
             - failed to fetch VPS
             - failed to fetch old interface of VPS
             - failed to fetch subnet for VPS
             - failed fetching subnet type
             - failed to release address for VPS
      security:
        - apiKey: []

  '/dns-zones':
    get:
      tags:
        - vps dns records
      summary: "Get all dns zones"
      responses:
        '200':
          $ref: "#/components/responses/DnsZoneResponse"
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch DNS zones"
      security:
        - apiKey: []
  '/dns-zones/{zoneid}':
    head:
      tags:
        - vps dns records
      summary: "Check CNAME record existence for specified zone"
      parameters:
        - $ref: "#/components/parameters/ZoneId"
        - $ref: "#/components/parameters/Cname"
      responses:
        '200':
          description: "OK"
        '400':
          description: "Failed to check CNAME record existence (invalid zone ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Not found"
      security:
        - apiKey: []

  '/partitions/{partitionid}/dns-zones':
    get:
      tags:
        - vps dns records
      summary: "Get all dns zones (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
      responses:
        '200':
          $ref: "#/components/responses/DnsZoneResponse"
        '400':
          description: "Failed to fetch partition DNS zones (invalid partition ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch partition DNS zones (no partition with specified ID)"
        '500':
          description: "Failed to fetch partition DNS zones"
      security:
        - apiKey: []

  '/partitions/{partitionid}/dns-zones/{zoneid}':
    head:
      tags:
        - vps dns records
      summary: "Check CNAME record existence for specified zone (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/ZoneId"
        - $ref: "#/components/parameters/Cname"
      responses:
        '200':
          description: "OK"
        '400':
          description: 
            Failed to check CNAME record existence
             - invalid partition ID format
             - invalid zone ID format
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Not found"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/dns-records':
    get:
      tags:
        - vps dns records
      summary: "Get DNS CNAME records for specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
      responses:
        '200':
          $ref: "#/components/responses/VpsDnsRecordResponse"
        '400':
          description: "Failed to fetch VPS DNS records (invalid VPS ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch VPS DNS records (no VPS with specified ID)"
        '500':
          description: "Failed to fetch VPS DNS records"
      security:
        - apiKey: []
    post:
      tags:
        - vps dns records
      summary: "Create DNS record for specified VPS"
      description: |
        **Notes:**
          - To create a **CNAME** record, include only the **host** and **target** fields in the **content** of the request body.
          - To create a **SRV** record, provide all fields in the **content** except for **host**.
          - Any additional fields that are not required for the specified record type (e.g. extra fields for CNAME) will be ignored.
      parameters:
        - $ref: "#/components/parameters/VpsId"
      requestBody:
        $ref: "#/components/requestBodies/VpsDnsRecordBody"
      responses:
        '200':
          description: "OK"
        '400':
          description: |
            Failed to add VPS DNS record
            - invalid VPS ID format
            - invalid payload
            - failed to validate record
            - record already exists
            - unsupported DNS record type            
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to add VPS DNS record (no VPS with specified ID)"
        '500':
          description: |
           Failed to add VPS DNS record
            - failed to fetch VPS
            - failed to insert into database
            - failed to check if CNAME record exists
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/dns-records/{uuid}':
    put:
      tags:
        - vps dns records
      summary: "Edit DNS record for specified VPS"
      description: |
        **Notes:**
          - To edit a **CNAME** record, include only the **host** and **target** fields in the **content** of the request body.
          - To edit a **SRV** record, provide all fields in the **content** except for **host**.
          - Any additional fields that are not required for the specified record type (e.g. extra fields for CNAME) will be ignored.        
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/UUID"
      requestBody:
        $ref: "#/components/requestBodies/VpsDnsRecordBody"
      responses:
        '200':
          description: "OK"
        '400':
          description: |
            Failed to update VPS DNS record
            - invalid VPS ID format
            - invalid payload
            - failed to validate record
            - record already exists
            - unsupported DNS record type
            - DNS record does not belong to VPS with specified ID
            - cannot change DNS zone
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           Failed to update VPS DNS record
            - no VPS with specified ID
            - no VPS DNS record with specified UUID
            - no VPS SRV record with specified UUID
        '500':
          description: |
           Failed to update VPS DNS record
            - failed to fetch VPS
            - failed to fetch VPS DNS record
            - failed to update in database
            - failed to check if CNAME record exists
      security:
        - apiKey: []
    delete:
      tags:
        - vps dns records
      summary: "Delete DNS CNAME record for specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/UUID"
      responses: 
        '200':
          description: "OK"
        '400':
          description: |
           Failed to delete VPS DNS record 
            - invalid VPS ID format
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to delete VPS DNS record (no VPS with specified ID)"
        '500':
          description: |
           Failed to delete VPS DNS record
            - failed to fetch VPS
            - failed to delete from database
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/dns-records':
    get:
      tags:
        - vps dns records
      summary: "Get DNS CNAME records for specified VPS (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
      responses:
        '200':
          $ref: "#/components/responses/VpsDnsRecordResponse"
        '400':
          description: |
           Failed to fetch VPS DNS records
            - invalid partition ID format
            - invalid VPS ID format
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           Failed to fetch VPS DNS records
            - no partition with specified ID
            - no VPS with specified ID
        '500':
          description: "Failed to fetch VPS DNS records"
      security:
        - apiKey: []
    post:
      tags:
        - vps dns records
      summary: "Create DNS record for specified VPS (as partition administrator)"
      description: |
        **Notes:**
          - To create a **CNAME** record, include only the **host** and **target** fields in the **content** of the request body.
          - To create a **SRV** record, provide all fields in the **content** except for **host**.
          - Any additional fields that are not required for the specified record type (e.g. extra fields for CNAME) will be ignored.
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
      requestBody:
        $ref: "#/components/requestBodies/VpsDnsRecordBody"
      responses:
        '200':
          description: "OK"
        '400':
          description: |
            Failed to add VPS DNS record
            - invalid partition ID format
            - invalid VPS ID format
            - invalid payload
            - failed to validate record
            - record already exists
            - unsupported DNS record type            
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           Failed to add VPS DNS record
            - no partition with specified ID
            - no VPS with specified ID
        '500':
          description: |
           Failed to add VPS DNS record
            - failed to fetch VPS
            - failed to insert into database
            - failed to check if CNAME record exists
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/dns-records/{uuid}':
    put:
      tags:
        - vps dns records
      summary: "Edit DNS record for specified VPS (as partition administrator)"
      description: |
        **Notes:**
          - To edit a **CNAME** record, include only the **host** and **target** fields in the **content** of the request body.
          - To edit a **SRV** record, provide all fields in the **content** except for **host**.
          - Any additional fields that are not required for the specified record type (e.g. extra fields for CNAME) will be ignored.        
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/UUID"
      requestBody:
        $ref: "#/components/requestBodies/VpsDnsRecordBody"
      responses:
        '200':
          description: "OK"
        '400':
          description: |
            Failed to update VPS DNS record
            - invalid partition ID format
            - invalid VPS ID format
            - invalid payload
            - failed to validate record
            - record already exists
            - unsupported DNS record type
            - DNS record does not belong to VPS with specified ID
            - cannot change DNS zone
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           Failed to update VPS DNS record
            - no partition with specified ID
            - no VPS with specified ID
            - no VPS DNS record with specified UUID
            - no VPS SRV record with specified UUID
        '500':
          description: |
           Failed to update VPS DNS record
            - failed to fetch VPS
            - failed to fetch VPS DNS record
            - failed to update in database
            - failed to check if CNAME record exists
      security:
        - apiKey: []
    delete:
      tags:
        - vps dns records
      summary: "Delete DNS CNAME record for specified VPS (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/UUID"
      responses: 
        '200':
          description: "OK"
        '400':
          description: |
           Failed to delete VPS DNS record
            - invalid partition ID format
            - invalid VPS ID format
            - VPS does not belong to specified partition
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           Failed to delete VPS DNS record
            - no partition with specified ID
            - no VPS with specified ID
        '500':
          description: |
           Failed to delete VPS DNS record
            - failed to fetch VPS
            - failed to delete from database
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/dns-srv':
    get:
      tags:
        - vps dns records
      summary: "Get DNS SRV records for specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
      responses:
        '200':
          $ref: "#/components/responses/VpsDnsSrvRecordResponse"
        '400':
          description: "Failed to fetch VPS DNS SRV records (invalid VPS ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch VPS DNS SRV records (no VPS with specified ID)"
        '500':
          description: "Failed to fetch VPS DNS SRV records"
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/dns-srv/{uuid}':
    delete:
      tags:
        - vps dns records
      summary: "Delete DNS SRV record for specified VPS"
      parameters:
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/UUID"
      responses: 
        '200':
          description: "OK"
        '400':
          description: "Failed to delete VPS DNS SRV record (invalid VPS ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to delete VPS DNS SRV record (no VPS with specified ID)"
        '500':
          description: |
           Failed to delete VPS DNS SRV record
            - failed to fetch VPS
            - failed to delete from database
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/dns-srv':
    get:
      tags:
        - vps dns records
      summary: "Get DNS SRV records for specified VPS (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
      responses:
        '200':
          $ref: "#/components/responses/VpsDnsSrvRecordResponse"
        '400':
          description: |
           Failed to fetch VPS DNS SRV records
            - invalid partition ID format
            - invalid VPS ID format
            - VPS does not belong to specified partition
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           Failed to fetch VPS DNS SRV records
            - no partition with specified ID
            - no VPS with specified ID
        '500':
          description: "Failed to fetch VPS DNS SRV records"
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/dns-srv/{uuid}':
    delete:
      tags:
        - vps dns records
      summary: "Delete DNS SRV record for specified VPS (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VpsId"
        - $ref: "#/components/parameters/UUID"
      responses: 
        '200':
          description: "OK"
        '400':
          description: |
           Failed to delete VPS DNS SRV record 
           - invalid VPS ID format
           - VPS does not belong to specified partition
        '403':
          description: "Insufficient permissions"
        '404':
          description: |
           Failed to delete VPS DNS SRV record
            - no partition with specified ID
            - no VPS with specified ID
        '500':
          description: |
           Failed to delete VPS DNS SRV record
            - failed to fetch VPS
            - failed to delete from database
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/oci-environments':
    parameters:
      - $ref: "#/components/parameters/VpsId"
    get:
      tags:
        - oci environments
      summary: "Get all OCI environment variables"
      responses:
        '200':
          $ref: "#/components/responses/OciEnvironmentResponse"
        '400':
          description: "Failed to Get OCI environment variables (VPS doesn't belong to specified partition)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to get OCI environment variables:
                        - unable to parse vpsid
                        - unable to get vps from db
                        - unable to parse partitionid
      security:
        - apiKey: []
    post:
      tags:
        - oci environments
      summary: "Add OCI environment variable"
      requestBody:
        $ref: "#/components/requestBodies/OciEnvCreateRequest"
      responses:
        '200':
          description: "OK"         
        '400':
          description: "Failed to add OCI environment variables (VPS doesn't belong to specified partition)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to add OCI environment variables:
                        - unable to decode JSON
                        - unable to parse vpsid
                        - unable to get vps from db
                        - unable to parse partitionid
                        - unable to add to db
      security:
        - apiKey: []

  '/networks/1/vpses/{vpsid}/oci-environments/{envid}':
    parameters:
      - $ref: "#/components/parameters/VpsId"
      - $ref: "#/components/parameters/EnvId"
    put:
      tags:
        - oci environments
      summary: "Edit OCI environment variable"
      requestBody:
        $ref: "#/components/requestBodies/OciEnvUpdateRequest"
      responses:
        '202':
          description: "OK"
        '400':
          description: |
                      Failed to update OCI environment variables:
                        - Invalid EnvId
                        - VPS doesn't belong to specified partition
                        - no OCI environment variable found for specified VPS
                        - cannot update OCI environment variables while a task is in progress or if VPS is in 'BUILDING' state
                        - Environment variables cannot be changed while using KVM engine until the VPS is stopped
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to update OCI environment variable:
                        - unable to decode JSON
                        - unable to parse vpsid
                        - unable to get vps from db
                        - unable to parse partitionid
                        - URL parameters do not match payload
                        - unable to parse envId
                        - unable to add variables to db
                        - unable to get oci config from db
      security:
        - apiKey: []
    delete:
      tags:
        - oci environments
      summary: "Remove OCI Environment variable"
      responses:
        '200':
          description: "OK"
        '400':
          description: "Failed to remove OCI environment variables (VPS doesn't belong to specified partition)"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to remove OCI environment variables (no OCI environment variable found for specified VPS)"
        '500':
          description: |
                      Failed to remove OCI environment variables:
                        - unable to parse vpsid
                        - unable to parse envId
                        - unable to get vps from db
                        - unable to parse partitionid
                        - unable to delete from db
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/oci-environments':
    parameters:
      - $ref: "#/components/parameters/PartitionId"
      - $ref: "#/components/parameters/VpsId"
    get:
      tags:
        - oci environments
      summary: "Get all OCI environment variables"
      responses:
        '200':
          $ref: "#/components/responses/OciEnvironmentResponse"
        '400':
          description: "Failed to Get OCI environment variables (VPS doesn't belong to specified partition)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to get OCI environment variables:
                        - unable to parse vpsid
                        - unable to get vps from db
                        - unable to parse partitionid
      security:
        - apiKey: []
    post:
      tags:
        - oci environments
      summary: "Add OCI environment variable"
      requestBody:
        $ref: "#/components/requestBodies/OciEnvCreateRequest"
      responses:
        '200':
          description: "OK"         
        '400':
          description: "Failed to add OCI environment variables (VPS doesn't belong to specified partition)"
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to add OCI environment variables:
                        - unable to decode JSON
                        - unable to parse vpsid
                        - unable to get vps from db
                        - unable to parse partitionid
                        - unable to add to db
      security:
        - apiKey: []

  '/partitions/{partitionid}/vpses/{vpsid}/oci-environments/{envid}':
    parameters:
      - $ref: "#/components/parameters/PartitionId"
      - $ref: "#/components/parameters/VpsId"
      - $ref: "#/components/parameters/EnvId"
    put:
      tags:
        - oci environments
      summary: "Edit OCI environment variable"
      requestBody:
        $ref: "#/components/requestBodies/OciEnvUpdateRequest"
      responses:
        '202':
          description: "OK"
        '400':
          description: |
                      Failed to update OCI environment variables:
                        - Invalid EnvId
                        - VPS doesn't belong to specified partition
                        - no OCI environment variable found for specified VPS
                        - cannot update OCI environment variables while a task is in progress or if VPS is in 'BUILDING' state
                        - Environment variables cannot be changed while using KVM engine until the VPS is stopped
        '403':
          description: "Insufficient Permissions!"
        '500':
          description: |
                      Failed to update OCI environment variable:
                        - unable to decode JSON
                        - unable to parse vpsid
                        - unable to get vps from db
                        - unable to parse partitionid
                        - URL parameters do not match payload
                        - unable to parse envId
                        - unable to add variables to db
                        - unable to get oci config from db
      security:
        - apiKey: []
    delete:
      tags:
        - oci environments
      summary: "Remove OCI Environment variable"
      responses:
        '200':
          description: "OK"
        '400':
          description: "Failed to remove OCI environment variables (VPS doesn't belong to specified partition"
        '403':
          description: "Insufficient Permissions!"
        '404':
          description: "Failed to remove OCI environment variables (no OCI environment variable found for specified VPS)"
        '500':
          description: |
                      Failed to remove OCI environment variables:
                        - unable to parse vpsid
                        - unable to parse envId
                        - unable to get vps from db
                        - unable to parse partitionid
                        - unable to delete from db
      security:
        - apiKey: []

  '/vps-volumes/{voluuid}':
    get:
      tags:
        - vps volumes
      summary: "Get VPS volume by volume ID"
      parameters:
        - $ref: "#/components/parameters/VolumeUUID"
      responses:
        '200':
          $ref: "#/components/responses/VPSVolumeResponse"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch VPS volume (no VPS volume with UUID)"
        '500':
          description: "Failed to fetch VPS volume"
      security:
        - apiKey: []

  '/partitions/{partitionid}/vps-volumes/{voluuid}':
    get:
      tags:
        - vps volumes
      summary: "Get VPS volume by volume ID (as partition administrator)"
      parameters:
        - $ref: "#/components/parameters/PartitionId"
        - $ref: "#/components/parameters/VolumeUUID"
      responses:
        '200':
          $ref: "#/components/responses/VPSVolumeResponse"
        '400':
          description: "Failed to fetch VPS volume from partition (invalid partition ID format)"
        '403':
          description: "Insufficient permissions"
        '404':
          description: "Failed to fetch VPS volume from partition (no VPS volume with UUID)"
        '500':
          description: "Failed to fetch VPS volume from partition"
      security:
        - apiKey: []

  '/networks/1/storage-pools':
    get:
      tags:
        - vps volumes
      summary: "Get storage pools"
      responses:
        '200':
          $ref: "#/components/responses/StoragePoolResponseMultiple"
        '403':
          description: "Insufficient permissions"
        '500':
          description: "Failed to fetch storage pools"
      security:
        - apiKey: []

  

components:

  parameters:
    Email:
      in: query
      name: email
      description: "Email to perform action on"
      schema:
        type: string
    UserId:
      in: path
      name: userid
      description: "User ID to perform action on"
      required: true
      schema:
        type: string
    TokenId:
      in: path
      name: tokenid
      description: "Api Token ID to perform action on"
      required: true
      schema:
        type: string
    Name:
      in: query
      name: name
      required: true
      schema:
        type: string
    PartitionId:
      in: path
      name: partitionid
      description: "Partition ID to perform action on"
      required: true
      schema:
        type: string
    NsKey:
      in: path
      name: nskey
      description: "Network Settings key"
      required: true
      schema:
        type: string
        enum:
          - controller
          - dns
          - failover
          - syslog
          - storage
          - lxc
    ServiceId:
      in: query
      name: service
      description: "Service type ID"
      required: false
      schema:
        type: string
    FlavorId:
      in: path
      name: flavorid
      description: "Flavor ID to perform action on"
      required: true
      schema:
        type: string
    TemplateType:
      in: query
      name: type
      description: "Template type to perform action on"
      schema:
        type: string
    VpsName:
      in: query
      name: name
      description: "VPS name"
      schema:
        type: string
    VpsState:
      in: query
      name: state
      description: "VPS state: leave empty for current VPSes, use 'removed' for deleted VPSes"
      schema:
        type: string
    VpsDownload:
      in: query
      name: download
      description: "VPS download"
      schema:
        type: string
    SourceVpsId:
      in: query
      name: src_vps_id
      description: "Source VPS ID (provided only when cloning a VPS)"
      schema:
        type: string
    VpsVolumeOrigin:
      in: query
      name: volume_origin
      description: "Volume origin: template-clone (create vps), volume-clone (clone vps)"
      required: true
      schema:
        type: string
        default: "template-clone"
    VpsVolumeSize:
      in: query
      name: volume_size
      description: "Volume size"
      required: true
      schema:
        type: string
        default: "25"
    VpsUuid:
      in: path
      name: vpsuuid
      description: "VPS UUID to perform action on"
      required: true
      schema:
        type: string
    VolumeUuid:
      in: path
      name: voluuid
      description: "Volume UUID to perform action on"
      required: true
      schema:
        type: string
    VpsId:
      in: path
      name: vpsid
      description: "VPS ID to perform action on"
      required: true
      schema:
        type: string
    IfaceName:
      in: path
      name: ifname
      required: true
      schema:
        type: string
    SubnetIdPath:
      in: path
      name: subnetid
      description: "Subnet ID"
      required: true
      schema:
        type: string
    Address:
      in: query
      name: address
      description: "address"
      required: true
      schema:
        type: string
    SubnetId:
      in: query
      name: subnetId
      description: "Subnet ID"
      required: true
      schema:
        type: string
    ZoneId:
      in: path
      name: zoneid
      description: "DNS zone ID"
      required: true
      schema:
        type: string
    Cname:
      in: query
      name: cname
      required: true
      schema:
        type: string
    UUID:
      in: path
      name: uuid
      description: "UUID"
      required: true
      schema:
        type: string
    EnvId:
      in: path
      name: envid
      description: "OCI Environment to perform action on"
      required: true
      schema:
        type: string
    Status:
      in: query
      name: status
      required: false
      description: "To retrieve addresses that are not reserved for any partition, set the status parameter to available."
      schema:
        type: string
    StatusPartition:
      in: query
      name: status
      required: false
      description: "To retrieve addresses that are not allocated to any VPS, set the status parameter to available."
      schema:
        type: string
    VolumeUUID:
      in: path
      name: voluuid
      description: "VPS volume UUID"
      required: true
      schema:
        type: string
    SnapUuid:
      in: path
      name: snapuuid
      description: "Snap UUID to perform action on"
      required: true
      schema:
        type: string

  requestBodies:
    UserCreate:
      content:
        application/json:
          schema:
            type: object
            allOf:
            - type: object
              properties:
                password:
                  type: string
            - $ref: "#/components/schemas/User"
            - type: object
              properties:
                send_login_details:
                  type: boolean

    TokenCreate:
      description: "Token created succesfully"
      content:
        application/json:
          schema:
              properties:
                name:
                  type: string
                  description: "Api token name"

    PartitionCreateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PartitionSimple"

    PartitionUpdateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PartitionExtra"

    FlavorCreateRequest:
      description: "Request body for creating or updating a flavor"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Flavor"

    VpsCreateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VpsCreate"
    
    VpsEditRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VpsEdit"
    
    StartVps:
      content:
        application/json:
          schema:
            type: object
            properties:
              daemonize:
                type: boolean
                description: "Daemonize VPS"
                default: true

    StopVps:
      content:
        application/json:
          schema:
            type: object
            properties:
              timeout:
                type: integer
                description: "Timeout"
                default: 15

    ExtendVps:
      content:
        application/json:
          schema:
            type: object
            properties:
              extend_by:
                type: integer
                description: "Amount to extend by in GB"
                default: 5
              volume_uuid:
                type: string
                description: "Volume UUID to extend"
                default: "string"
    
    ShrinkVps:
      content:
        application/json:
          schema:
            type: object
            properties:
              volume_uuid:
                type: string
                description: "Volume UUID to shrink"
                default: "string"

    MoveVps:
      content:
        application/json:
          schema:
            type: object
            properties:
              src_host_id:
                type: integer
                descritpion: "Source host ID"
                default: 1
              dest_host_id:
                type: integer
                descritpion: "Destination host ID"
                default: 2

    ChangeVpsDomain:
      content:
        application/json:
          schema:
            type: object
            properties:
              src_partition_id:
                type: integer
                descritpion: "Source partition ID"
                default: 1
              dest_partition_id:
                type: integer
                descritpion: "Destination partition ID"
                default: 2

    ChangeVpsOwner:
      content:
        application/json:
          schema:
            type: object
            properties:
              old_owner_id:
                type: integer
                descritpion: "Old owner ID"
                default: 1
              new_owner_id:
                type: integer
                descritpion: "New owner ID"
                default: 2

    VPSInterfaceCreate:
      description: "Request body for creating a VPS"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VPSInterfaceCreate"

    VpsDnsRecordBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VpsDnsRecordBody"

    OciEnvCreateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OciEnvironmentVars"

    OciEnvUpdateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OciEnvironmentVarsId"

    SnapshotCreateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Snapshot"
    
    SnapshotUpdateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Snapshot"

  responses:
    UserResponseMultiple:
      description: "A list of users retrieved succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponse"
              status:
                type: string
                description: "Status response"
                default: "success"

    UserResponseSingle:
      description: "User created successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/UserResponse"
              status:
                type: string
                description: "Status response"
                default: "success"

    TokenGet:
      description: "Token data retrieved succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/Token"
              status:
                type: string
                description: "Status response"
                default: "success"

    TokenCreate:
      description: "Token created succesfully"
      content:
        application/json:
          schema:
                type: object
                properties:
                  data:
                    type: string
                    description: "Api token"
                  success: 
                    type: string
                    default: success

    PartitionResponseSingle:
      description: "Partition info retrieved successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/PartitionExtra"
              status:
                type: string
                description: "Status response"
                default: "success"

    PartitionResponseMultiple:
      description: "A list of partitions retrieved successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/PartitionFull"
              status:
                type: string
                description: "Status response"
                default: "success"

    PartitionUpdateResponse:
      description: "Partition updated successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/PartitionExtra"
              status:
                type: string
                description: "Status response"
                default: "success"

    UserPartitionResponseSingle:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/UserPartitionSingle"
              status:
                type: string
                description: "Status response"
                default: "success"

    UserPartitionResponseMultiple:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/UserPartitionMultiple"
              status:
                type: string
                description: "Status response"
                default: "success"

    HostResponse:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Host"
              status:
                type: string
                description: "Status response"
                default: "success"

    FlavorResponseMultiple:
      description: "Flavors fetched successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/FlavorResponse"
                    - type: object
                      properties:
                        vps_count:
                          type: integer
                          description: Number of VPS instances using this flavor
                        enabled:
                          type: boolean
                          description: Indicates whether the flavor is enabled
              status:
                type: string
                description: "Status of the response"
                default: "success"

    FlavorResponseSingle:
      description: "Flavor response after successful operation"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: "#/components/schemas/FlavorResponse"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    EnabledFlavorsResponse:
      description: "Enabled flavors in partition after succesful operation"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/FlavorResponse"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    RegistryProvidersResponse:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Registry"
              status:
                type: string
                description: "Status response"
                default: "success"

    TemplateResponse:
      description: "OK"
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/TemplateResponseAll'
              - $ref: '#/components/schemas/TemplateResponseOfficial'
              - $ref: '#/components/schemas/TemplateResponseCommunity'

    VpsResponseMultiple:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/VpsResponse"
              status:
                type: string
                description: "Status response"
                default: "success"

    VpsResponseSingle:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: "#/components/schemas/VpsResponsePartial"
              status:
                type: string
                description: "Status response"
                default: "success"
  
    VpsLicenceResponseSingle:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: "#/components/schemas/VpsLicence"
              status:
                type: string
                description: "Status response"
                default: "success"

    VPSInterfaceResponseSingle:
      description: "Object of VPS interface after successful operation"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: "#/components/schemas/VPSInterface"
              status:
                type: string
                description: Status of the response
                default: "success" 

    VPSInterfaceResponseMultiple:
      description: "List of VPS interfaces after successful operation"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/VPSInterface"
                description: List of VPS objects
              status:
                type: string
                description: Status of the response
                default: "success"

    DnsZoneResponse:
      description: "List of DNS zones"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: "#/components/schemas/DnsZone"
              status:
                type: string
                description: Status of the response
                default: "success"

    VpsDnsRecordResponse:
      description: "VPS DNS records fetched succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/VpsDnsRecord"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    VpsDnsSrvRecordResponse:
      description: "VPS DNS SRV records fetched succesfully"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VpsDnsSrvRecordResponse"

    OciEnvironmentResponse:
      description: "A list of volume snapshots retrieved successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/OciEnvironmentVarsId"
              status:
                type: string
                description: "Status response"
                default: "success"

    SubnetResponseMultiple:
      description: "Subnets fetched succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Subnet"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    SubnetTypeResponseMultiple:
      description: "Subnet types fetched succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/SubnetType"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    SubnetIPAddressResponse:
      description: "Subnet IP addresses fetched succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/SubnetIPAddress"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    ServiceTypeResponseMultiple:
      description: "Service types fetched succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceType"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    VPSVolumeResponse:
      description: "VPS volume fetched succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: "#/components/schemas/VPSVolume"
              status:
                type: string
                description: Status of the response
                default: "success"

    StoragePoolResponseMultiple:
      description: "Storage pools fetched succesfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/StoragePool"
              status:
                type: string
                description: "Status of the response"
                default: "success"

    SnapshotResponseSingle:
      description: "Volume snapshot retrieved successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/SnapshotResponseSingle"
              status:
                type: string
                description: "Status response"
                default: "success"

    SnapshotCreateResponse:
      description: "Volume snapshot created successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/SnapshotResponseSingle"
              status:
                type: string
                description: "Status response"
                default: "success"

    SnapshotRollbackResponse:
      description: "Volume snapshot rolled back successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/SnapshotResponseSingle"
              status:
                type: string
                description: "Status response"
                default: "success"

    SnapshotResponseMultiple:
      description: "A list of volume snapshots retrieved successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/SnapshotResponseMultiple"
              status:
                type: string
                description: "Status response"
                default: "success"

  schemas:
    User:
      type: object
      properties:
        role_id:
          type: integer
          default: 1
          description: "ID of the role assigned to the user"
        name:
          type: string
          description: "First name of the user"
        surname:
          type: string
          description: "Surname of the user"
        phone:
          type: string
          default: "225-883"
          description: "Phone number of the user"
        fax:
          type: string
          description: "Fax number of the user"
        email:
          type: string
          format: email
          description: "Email address of the user"
        jabber:
          type: string
          description: "Jabber ID of the user"
        suspended:
          type: boolean
          default: false
          description: "Whether the user is suspended"
        notification:
          type: boolean
          description: "Whether the user has notifications enabled"
        notification_settings:
          type: object
          properties:
            alarms:
              type: object
              properties:
                host:
                  type: object
                  properties:
                    info:
                      type: boolean
                    notice:
                      type: boolean
                    warning:
                      type: boolean
                    critical:
                      type: boolean
                vps:
                  type: object
                  properties:
                    info:
                      type: boolean
                    notice:
                      type: boolean
                    warning:
                      type: boolean
                    critical:
                      type: boolean
            events:
              type: object
              properties:
                domain:
                  type: object
                  properties:
                    added:
                      type: boolean
                    changed:
                      type: boolean
                    removed:
                      type: boolean
                host:
                  type: object
                  properties:
                    added:
                      type: boolean
                    changed:
                      type: boolean
                    removed:
                      type: boolean
                vps:
                  type: object
                  properties:
                    added:
                      type: boolean
                    changed:
                      type: boolean
                    removed:
                      type: boolean
        tfa_enabled:
          type: boolean
          default: false
          description: "Whether two-factor authentication is enabled for the user"
        tfaSecret:
          type: string
          description: "Two-factor authentication secret key"
        tfa_backup_codes:
          type: string
          description: "Backup codes for two-factor authentication"

    UserResponse:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: "Unique identifier for the user"
        - $ref: "#/components/schemas/User"

    Token:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the token
        user_id:
          type: integer
          description: ID of user who owns the token
        name:
          type: string
          description: Name of the token
        token:
          type: string
          description: Hashed api token
        creation_date:
          type:  integer
          description: Timestamp of token creation
        last_used:
          type: integer
          description: Timestamp of token last use

    PartitionSimple:
      type: object
      properties:
        net_id:
          type: integer
          description: "Network ID the partition belongs to"
          default: 1
        name:
          type: string
          description: "Name of the partition"
          default: "string"
        company:
          type: string
          description: "Name of the company accosiated with the partition"
          default: "string"
        crm_link:
          type: string
          description: "Account URL"
          default: "string"
        vps_quota:
          type: integer
          description: "Partition VPS quota"
          default: 1
          minimum: 1
          maximum: 200
        stor_quota:
          type: integer
          description: "Partition storage quota in GB"
          default: 100
          minimum: 1
          maximum: 10240
        mem_quota:
          type: integer
          description: "Partition memory quota in MB"
          default: 10240
          minimum: 1
          maximum: 2097152
        user_quota:
          type: integer
          description: "Partition user quota"
          default: 1
          minimum: 1
          maximum: 100

    PartitionExtra:
      type: object
      properties:
        id:
          type: integer
          description: "Partition ID"
          default: 1
        uuid:
          type: string
          description: "Partition UUID"
          default: ""
        net_id:
          type: integer
          description: "Network ID the partition belongs to"
          default: 1
        name:
          type: string
          description: "Name of the partition"
          default: "string"
        storage_pool_id:
          type: integer
          description: "Storage pool ID"
          default: 1
        dataset:
          type: string
          description: "Dataset name"
          default: ""
        company:
          type: string
          description: "Name of the company accosiated with the partition"
          default: "string"
        crm_link:
          type: string
          description: "Account URL"
          default: "string"
        vps_quota:
          type: integer
          description: "Partition VPS quota"
          default: 1
          minimum: 1
          maximum: 200
        stor_quota:
          type: integer
          description: "Partition storage quota in GB"
          default: 100
          minimum: 1
          maximum: 10240
        mem_quota:
          type: integer
          description: "Partition memory quota in MB"
          default: 10240
          minimum: 1
          maximum: 2097152
        user_quota:
          type: integer
          description: "Partition user quota"
          default: 1
          minimum: 1
          maximum: 100

    PartitionFull:
      allOf:
        - $ref: "#/components/schemas/PartitionExtra"
        - type: object
          properties:
            vps_usage:
              type: integer
              description: "Number of VPSs in the partition"
              default: 1
            stor_usage:
              type: integer
              description: "Total number of partition storage used in GB"
              default: 25
            mem_usage:
              type: integer
              description: "Total number of partition memory used in MB"
              default: 2048
            cc_count:
              type: integer
              description: "Total number of concurrent calls"
              default: 0

    UserPartitionSingle:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: "Partition ID"
              default: 1
            uuid:
              type: string
              description: "Partition UUID"
        - $ref: "#/components/schemas/PartitionSimple"
    
    UserPartitionMultiple:
      type: object
      properties:
        id:
          type: integer
          description: "Partition ID"
          default: 1
        uuid:
          type: string
          description: "Partition UUID"
        net_id:
          type: integer
          description: "Network ID the partition belongs to"
          default: 1
        name:
          type: string
          description: "Name of the partition"
          default: "string"
        dataset:
          type: string
          description: "Dataset name"
          default: ""
        company:
          type: string
          description: "Name of the company accosiated with the partition"
          default: "string"
        crm_link:
          type: string
          description: "Account URL"
          default: "string"
        vps_quota:
          type: integer
          description: "Partition VPS quota"
          default: 1
          minimum: 1
          maximum: 200
        stor_quota:
          type: integer
          description: "Partition storage quota in GB"
          default: 100
          minimum: 1
          maximum: 10240
        mem_quota:
          type: integer
          description: "Partition memory quota in MB"
          default: 10240
          minimum: 1
          maximum: 2097152
        user_quota:
          type: integer
          description: "Partition user quota"
          default: 1
          minimum: 1
          maximum: 100

    Host:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the host
        uuid:
          type: string
          description: Universally unique identifier for the host
        net_id:
          type: integer
          description: Network ID the host belongs to
        name:
          type: string
          description: Name of the host
        purpose:
          type: string
          enum:
            - STORAGE
            - PROCESSING
            - BACKUP
            - UTILITY
          description: Purpose of the host
        storage_location:
          type: string
          description: Storage location type
          enum:
            - LOCAL
            - NETWORK
        mirror_id:
          type: integer
          description: ID of the mirror associated with the host
        pool_id:
          type: integer
          description: Pool ID the host belongs to
        hostname:
          type: string
          description: Hostname of the host
        ip_address:
          type: string
          description: IP address of the host
        port:
          type: integer
          description: Port number used by the host
        repl_api_port:
          type: integer
          description: Replication API port
        state:
          type: string
          description: State of the host
          enum: 
            - UP
            - DOWN
            - DISABLED
            - NOT ACTIVATED
            - NON OPERATIONAL
            - NOT CONFIGURED
            - MAINTENANCE
            - EVACUATING
        enabled:
          type: boolean
          description: Indicates if the host is enabled
        use_central_syslog:
          type: boolean
          description: Indicates if the host uses a central syslog
        use_local_dns:
          type: integer
          description: Indicates the DNS configuration for the host
        bw_limit:
          type: integer
          description: Bandwidth limit
        description:
          type: string
          description: Description of the host
        online:
          type: boolean
          description: Indicates if the host is online
        connected:
          type: boolean
          description: Indicates if the host is connected
        man_established:
          type: boolean
          description: Number of management connections established
        storage_available:
          type: boolean
          description: Indicates if storage is available
        storage_health:
          type: string
          enum:
            - ONLINE
            - DEGRADED
            - FAULTED
            - UNAVAIL
          description: Health status of the storage
        sw_outdated:
          type: boolean
          description: Indicates if the software is outdated
        uptime:
          type: integer
          description: Uptime of the host in seconds
        cpu_usage:
          type: number
          format: float
          description: CPU usage percentage
        io_wait:
          type: number
          format: float
          description: IO wait percentage
        mem_usage:
          type: number
          format: float
          description: Memory usage percentage
        disk_usage:
          type: number
          format: float
          description: Disk usage percentage
        cc_count:
          type: integer
          description: Call count
        cpu_temp:
          type: integer
        mem_total:
          type: integer
          description: Total memory available in KB
        vps_count:
          type: integer
          description: Total number of VPS instances
        vps_running:
          type: integer
          description: Number of running VPS instances
        platform_details:
          type: object
          properties:
            architecture:
              type: array
              items:
                type: string
              description: CPU architecture details
            hostname:
              type: string
              description: Hostname of the platform
            cpu_model:
              type: string
              description: CPU model
            cpu_count:
              type: integer
              description: Number of CPU cores
            system:
              type: string
              description: Operating system
            system_type:
              type: string
              description: System type
            kernel_version:
              type: string
              description: Kernel version
            motherboard:
              type: string
              description: Motherboard details
            hvm_enabled:
              type: boolean
              description: Indicates if hardware virtualization is enabled
            storage_ctrls:
              type: array
              items:
                type: object
                properties:
                  vendor:
                    type: string
                    description: Vendor of the storage controller
                  product:
                    type: string
                    description: Product name of the storage controller
                  description:
                    type: string
                    description: Description of the storage controller
              description: List of storage controllers
            network_cards:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the network card
                  vendor:
                    type: string
                    description: Vendor of the network card
                  product:
                    type: string
                    description: Product name of the network card
                  description:
                    type: string
                    description: Description of the network card
                  driver:
                    type: string
                    description: Driver used by the network card
              description: List of network cards
            service_versions:
              type: array
              items:
                type: object
                properties:
                  service:
                    type: string
                    description: Name of the service
                  version:
                    type: string
                    description: Version of the service
              description: List of service versions
            swcore_version:
              type: string
              description: Software core version

    Flavor:
      type: object
      properties:
        name:
          type: string
          description: Name of the flavor
        cpu_share:
          type: integer
          description: The amount of CPU shares allocated
          enum:
            - 256
            - 512
            - 1024
        cpu_limit:
          type: integer
          description: Maximum number of CPUs allowed
          enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
            - 32
            - 64
        mem_limit:
          type: integer
          description: Memory limit in MB
          minimum: 1
          maximum: 65536
        storage:
          type: integer
          description: Storage limit in GB
          minimum: 1
          maximum: 10000
        io_limit:
          type: integer
          description: I/O bandwidth limit in bytes per second
          enum:
            - 0              # Unlimited
            - 1048576        # 1 MB/s
            - 5242880        # 5 MB/s
            - 10485760       # 10 MB/s
            - 20971520       # 20 MB/s
            - 31457280       # 30 MB/s
            - 41943040       # 40 MB/s
            - 52428800       # 50 MB/s
            - 78643200       # 75 MB/s
        iops_limit:
          type: integer
          description: Input/output operations per second limit
          enum:
            - 0
            - 100
            - 200
            - 300
            - 500

        id: 
          type: integer
          description: ID of flavor

    FlavorResponse:
      allOf:
        - type: object
          properties:
            id: 
              type: integer
              description: ID of flavor
        - $ref: "#/components/schemas/Flavor"

    Registry:
      type: object
      properties:
        id:
          type: integer
          description: "Registry ID"
          default: 1
        name:
          type: string
          description: "Registry name"
          default: "string"
        url:
          type: string
          description: "Registry URL"
          default: "string"
        state:
          type: integer
          description: "Registry state (enabled/disabled)"
          default: 1

    Template:
      type: object
      properties:
        id:
          type: integer
          description: "Template ID"
          default: 1
        distro:
          type: string
          description: "Distro the template is based on"
        name:
          type: string
          description: "Template name"
          default: "string"
        display_name:
          type: string
          description: "Template display name"
          default: "string"
        version:
          type: string
          description: "Template version"
          default: "string"
        revision:
          type: integer
          description: "Template revision"
          default: 1
        backing_store:
          type: string
          description: "Template storage path"
          default: "/path/to/template"
        description:
          type: string
          description: "Template description"
          default: "string"
        state:
          type: string
          description: "Template state (enabled/disabled)"
          default: "ENABLED"
        progress:
          type: integer
          description: "Template installation progress"
          default: -1
        os_id:
          type: integer
          description: "Template OS ID"
          default: 1
        service_type_id:
          type: integer
          description: "Template service type ID"
          default: 1
        digest:
          type: string
          description: ""
          default: ""

    TemplateResponseAll:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Template"
        status:
          type: string
          description: "Status response"
          default: "success"
    
    TemplateResponseOfficial:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Template"
        status:
          type: string
          description: "Status response"
          default: "success"
    
    TemplateResponseCommunity:
      type: object
      properties:
        data:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Template"
        status:
          type: string
          description: "Status response"
          default: "success"

    VpsCreate:
      type: object
      properties:
        vps:
          type: object
          properties:
            template_type:
              type: string
              description: ""
              default: "OFFICIAL"
            engine:
              type: string
              description: ""
              default: "lxc"
            name:
              type: string
              description: ""
              default: "API-VPS"
            service_type_id:
              type: integer
              description: ""
              default: 0
            os_id:
              type: integer
              description: ""
              default: 0
            template_id:
              type: integer
              description: ""
              default: 1
            template:
              type: string
              description: ""
              default: "official/pbxware:7.3"
            host_id:
              type: integer
              description: ""
              default: 1
            partition_id:
              type: integer
              description: ""
              default: 1
            flavor_id:
              type: integer
              description: ""
              default: 3
            root_password:
              type: string
              description: ""
              default: "test1234"
            mem_limit:
              type: integer
              description: ""
              default: 2048
            cpu_share:
              type: integer
              description: ""
              default: 512
            cpu_limit:
              type: integer
              description: ""
              default: 4
            io_limit:
              type: integer
              description: ""
              default: 20
            read_iops_limit:
              type: integer
              description: ""
              default: 100
            write_iops_limit:
              type: integer
              description: ""
              default: 100
            astdb_ram_mb:
              type: integer
              description: ""
              default: 0
            callrec_ram_mb:
              type: integer
              description: ""
              default: 64
            highly_available:
              type: boolean
              description: ""
              default: false
            backup:
              type: boolean
              description: ""
              default: true
            protected:
              type: boolean
              description: ""
              default: false
            include_in_grs:
              type: boolean
              description: ""
              default: false
            gserver_uuid:
              type: string
              description: ""
              default: "string"
            tmp_size:
              type: integer
              description: ""
              default: 256
            run_size:
              type: integer
              description: ""
              default: 128
            registry_id:
              type: integer
              description: ""
              default: 0
        oci_configs:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/OciRegistry"
              - $ref: "#/components/schemas/OciImage"
              - $ref: "#/components/schemas/OciTag"
              - $ref: "#/components/schemas/OciVolumeMapping"

    VpsEdit:
      type: object
      properties:
        id:
          type: integer
          description: "VPS ID"
          default: 25
        uuid:
          type: string
          description: "VPS UUID"
          default: "f1870358651649e1abc7283eb31e9a06"
        template_type:
          type: string
          description: ""
          default: "OFFICIAL"
        engine:
          type: string
          description: ""
          default: "lxc"
        name:
          type: string
          description: ""
          default: "API-VPS"
        service_type_id:
          type: integer
          description: ""
          default: 0
        os_id:
          type: integer
          description: ""
          default: 0
        os_distro:
          type: string
          description: ""
          default: ""
        template_id:
          type: integer
          description: ""
          default: 1
        template:
          type: string
          description: ""
          default: "official/pbxware:7.3"
        host_id:
          type: integer
          description: ""
          default: 1
        partition_id:
          type: integer
          description: ""
          default: 1
        flavor_id:
          type: integer
          description: ""
          default: 5
        root_password:
          type: string
          description: ""
          default: ""
        mem_limit:
          type: integer
          description: ""
          default: 6144
        cpu_share:
          type: integer
          description: ""
          default: 512
        cpu_limit:
          type: integer
          description: ""
          default: 12
        io_limit:
          type: integer
          description: ""
          default: 20
        read_iops_limit:
          type: integer
          description: ""
          default: 150
        write_iops_limit:
          type: integer
          description: ""
          default: 150
        astdb_ram_mb:
          type: integer
          description: ""
          default: 0
        callrec_ram_mb:
          type: integer
          description: ""
          default: 64
        highly_available:
          type: boolean
          description: ""
          default: false
        backup:
          type: boolean
          description: ""
          default: true
        protected:
          type: boolean
          description: ""
          default: false
        created_at:
          type: integer
          description: "VPS create date in UNIX format"
          default: 1736169840
        removed_at:
          type: integer
          description: ""
          default: 0
        volume_size:
          type: integer
          description: "Storage volume size in GB"
          default: 0
        tmp_size:
          type: integer
          description: ""
          default: 256
        run_size:
          type: integer
          description: ""
          default: 128
        registry_id:
          type: integer
          description: ""
          default: 0
        user_id:
          type: integer
          description: ""
          default: 2
        state:
          type: string
          description: ""
          default: "STOPPED"
        task:
          type: string
          description: ""
          default: ""
        autostart:
          type: boolean
          description: ""
          default: false

    OciRegistry:
      type: object
      properties:
        id:
          type: integer
          description: "ID"
          default: null
        name:
          type: string
          description: "Entry name"
          default: "OCI_REGISTRY"
        value: 
          type: string
          description: "Entry value"
          default: "[]"
        type:
          type: string
          description: "Entry type"
          default: "system"

    OciImage:
      type: object
      properties:
        id:
          type: integer
          description: "ID"
          default: null
        name:
          type: string
          description: "Entry name"
          default: "OCI_IMAGE"
        value: 
          type: string
          description: "Entry value"
          default: "[]"
        type:
          type: string
          description: "Entry type"
          default: "system"

    OciTag:
      type: object
      properties:
        id:
          type: integer
          description: "ID"
          default: null
        name:
          type: string
          description: "Entry name"
          default: "OCI_TAG"
        value: 
          type: string
          description: "Entry value"
          default: "[]"
        type:
          type: string
          description: "Entry type"
          default: "system"

    OciVolumeMapping:
      type: object
      properties:
        id:
          type: integer
          description: "ID"
          default: null
        name:
          type: string
          description: "Entry name"
          default: "OCI_VOLUME_MAPPING"
        value: 
          type: string
          description: "Entry value"
          default: "[]"
        type:
          type: string
          description: "Entry type"
          default: "system"

    VpsResponsePartial:
      type: object
      properties:
        id:
          type: integer
          description: ""
          default: 13
        uuid:
          type: string
          description: ""
          default: "4935140b8e7243d493944e357ede1bcd"
        host_id:
          type: integer
          description: ""
          default: 1
        partition_id:
          type: integer
          description: ""
          default: 1
        user_id:
          type: integer
          description: ""
          default: 3
        service_type_id:
          type: integer
          description: ""
          default: 0
        os_id:
          type: integer
          description: ""
          default: 7
        os_distro:
          type: string
          description: ""
          default: "Alpine"
        template_id:
          type: integer
          description: ""
          default: 0
        flavor_id:
          type: integer
          description: ""
          default: 3
        template:
          type: string
          description: ""
          default: ""
        template_type:
          type: string
          description: ""
          default: "SYSTEM"
        engine:
          type: string
          description: ""
          default: "kvm"
        name:
          type: string
          description: ""
          default: "alpine"
        description:
          type: string
          description: ""
          default: ""
        state:
          type: string
          description: ""
          default: "STOPPED"
        task:
          type: string
          description: ""
          default: ""
        autostart:
          type: boolean
          description: ""
          default: false
        highly_available:
          type: boolean
          description: ""
          default: false
        backup:
          type: boolean
          description: ""
          default: true
        protected:
          type: boolean
          description: ""
          default: false
        mem_limit:
          type: integer
          description: ""
          default: 2048
        cpu_share:
          type: integer
          description: ""
          default: 512
        cpu_limit:
          type: integer
          description: ""
          default: 4
        io_limit:
          type: integer
          description: ""
          default: 20
        read_iops_limit:
          type: integer
          description: ""
          default: 100
        write_iops_limit:
          type: integer
          description: ""
          default: 100
        astdb_ram_mb:
          type: integer
          description: ""
          default: 0
        callrec_ram_mb:
          type: integer
          description: ""
          default: 0
        created_at:
          type: integer
          description: ""
          default: 1732699427
        removed_at:
          type: integer
          description: ""
          default: 0
        volume_size:
          type: integer
          description: ""
          default: 0
        tmp_size:
          type: integer
          description: ""
          default: 256
        run_size:
          type: integer
          description: ""
          default: 128
        root_password:
          type: string
          description: ""
          default: ""
        registry_id:
          type: integer
          description: ""
          default: 0

    VpsResponse:
      type: object
      properties:
        id:
          type: integer
          description: ""
          default: 13
        uuid:
          type: string
          description: ""
          default: "4935140b8e7243d493944e357ede1bcd"
        host_id:
          type: integer
          description: ""
          default: 1
        partition_id:
          type: integer
          description: ""
          default: 1
        user_id:
          type: integer
          description: ""
          default: 3
        service_type_id:
          type: integer
          description: ""
          default: 0
        os_id:
          type: integer
          description: ""
          default: 7
        os_distro:
          type: string
          description: ""
          default: "Alpine"
        template_id:
          type: integer
          description: ""
          default: 0
        flavor_id:
          type: integer
          description: ""
          default: 3
        template:
          type: string
          description: ""
          default: ""
        template_type:
          type: string
          description: ""
          default: "SYSTEM"
        engine:
          type: string
          description: ""
          default: "kvm"
        name:
          type: string
          description: ""
          default: "alpine"
        description:
          type: string
          description: ""
          default: ""
        state:
          type: string
          description: ""
          default: "STOPPED"
        task:
          type: string
          description: ""
          default: ""
        autostart:
          type: boolean
          description: ""
          default: false
        highly_available:
          type: boolean
          description: ""
          default: false
        backup:
          type: boolean
          description: ""
          default: true
        protected:
          type: boolean
          description: ""
          default: false
        mem_limit:
          type: integer
          description: ""
          default: 2048
        cpu_share:
          type: integer
          description: ""
          default: 512
        cpu_limit:
          type: integer
          description: ""
          default: 4
        io_limit:
          type: integer
          description: ""
          default: 20
        read_iops_limit:
          type: integer
          description: ""
          default: 100
        write_iops_limit:
          type: integer
          description: ""
          default: 100
        astdb_ram_mb:
          type: integer
          description: ""
          default: 0
        callrec_ram_mb:
          type: integer
          description: ""
          default: 0
        created_at:
          type: integer
          description: ""
          default: 1732699427
        removed_at:
          type: integer
          description: ""
          default: 0
        volume_size:
          type: integer
          description: ""
          default: 0
        tmp_size:
          type: integer
          description: ""
          default: 256
        run_size:
          type: integer
          description: ""
          default: 128
        root_password:
          type: string
          description: ""
          default: ""
        registry_id:
          type: integer
          description: ""
          default: 0
        curr_state:
          type: string
          description: ""
          default: ""
        previous_state:
          type: string
          description: ""
          default: ""
        cpu_usage:
          type: integer
          description: ""
          default: 0
        mem_usage:
          type: integer
          description: ""
          default: 0
        disk_usage:
          type: number
          description: ""
          default: 0.699999988079071
          format: double
        disk_state:
          type: string
          description: ""
          default: "RW"
        cc_count:
          type: integer
          description: ""
          default: 0
        last_repl_state:
          type: string
          description: ""
          default: ""
        licence_no:
          type: string
          description: ""
          default: ""
        DomainName:
          type: string
          description: ""
          default: ""
        HostName:
          type: string
          description: ""
          default: ""
        HostIp:
          type: string
          description: ""
          default: ""
        up_down_time:
          type: object
          description: ""
          default:
            uptime: 0
            down_timestamp: 1128620
        ip_addresses:
          type: array
          description: ""
          default:
            - "192.168.50.31"

    VpsLicence:
      type: object
      properties:
        licence_no:
          type: string
          description: "licence"
          default: string
        vps_uuid:
          type: string
          description: ""
          default: "string"

    VPSInterfaceCreate:
      type: object
      properties:
        subnet_id:
          type: integer
          description: Identifier of the subnet the VPS is associated with
        address:
          type: string
          description: IPv4 address assigned to the VPS
          default: 192.168.50.50
        external_address:
          type: string
          description: External IPv4 address assigned to the VPS
        address_ipv6:
          type: string
          description: IPv6 address assigned to the VPS
          default: "fe00::2"
        default_gateway:
          type: boolean
          description: Indicates whether this is the default gateway
          default: false
        name:
          type: string
          description: Name of the network interface
          enum:
            - eth0
            - eth1
            - eth2
            - eth3
            - eth4
            - wg0
            - wg1
            - wg2
            - wg3
            - wg4
        mac:
          type: string
          description: MAC address of the network interface
          default: "00:1A:2B:3C:4D:5E"
      required:
        - subnet_id
        - name
        - default_gateway

    VPSInterface:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the VPS
        subnet_id:
          type: integer
          description: Identifier of the subnet the VPS is associated with
        address:
          type: string
          description: IPv4 address assigned to the VPS
        external_address:
          type: string
          description: External IPv4 address assigned to the VPS
        address_ipv6:
          type: string
          description: IPv6 address assigned to the VPS
        default_gateway:
          type: boolean
          description: Indicates whether this is the default gateway
        vps_id:
          type: integer
          description: ID of the VPS associated with this entry
        name:
          type: string
          description: Name of the network interface
          enum:
                  - eth0
                  - eth1
                  - eth2
                  - eth3
                  - eth4
                  - wg0
                  - wg1
                  - wg2
                  - wg3
                  - wg4
        link:
          type: string
          description: Name of the associated bridge or network link
        prefix_size:
          type: integer
          description: Size of the IPv4 network prefix
        prefix_size_ipv6:
          type: integer
          description: Size of the IPv6 network prefix
        mac:
          type: string
          description: MAC address of the network interface
        virt_net_private_key:
          type: object
          properties:
            String:
              type: string
              description: Private key for the virtual network
            Valid:
              type: boolean
              description: Indicates whether the private key is valid
        virt_net_private_key_ipv6:
          type: object
          properties:
            String:
              type: string
              description: Private key for the IPv6 virtual network
            Valid:
              type: boolean
              description: Indicates whether the IPv6 private key is valid

    DnsZone:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the DNS zone
        type:
          type: string
          enum: 
            - PRIMARY
            - SECONDARY
          description: Type of the DNS zone (e.g., PRIMARY, SECONDARY)
        name:
          type: string
          description: Fully qualified domain name (FQDN) of the DNS zone
        partition_uuid:
          type: string
          format: uuid
          description: UUID of the partition associated with the DNS zone
        ttl:
          type: integer
          description: Time to live (TTL) for the DNS zone
        port:
          type: integer
          description: Port used for DNS communication (typically 53)
        transfer_from:
          type: array
          items:
            type: string
          description: List of source IP addresses for DNS zone transfer
        transfer_to:
          type: array
          items:
            type: string
          description: List of destination IP addresses for DNS zone transfer

    VpsDnsRecord:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the DNS record
        uuid:
          type: string
          format: uuid
          description: Universally unique identifier for the DNS record
        zone_id:
          type: integer
          description: ID of the DNS zone associated with the record
        vps_id:
          type: integer
          description: ID of the VPS associated with the DNS record
        type:
          type: string
          enum:
            - CNAME
            - SRV
          description: Type of the DNS record (e.g. CNAME or SRV)
        content:
          type: object
          properties:
            host:
              type: string
              description: Hostname of the DNS record
            target:
              type: string
              description: Target of the DNS record (e.g., CNAME target or IP address)

    VpsDnsRecordBody:
      type: object
      properties:
        zone_id:
          type: integer
          description: ID of the DNS zone associated with the record
        type:
          type: string
          enum:
            - CNAME
            - SRV
          default: "CNAME"
          description: Type of the DNS record (CNAME)
        content:
          type: object
          properties:
            host:
              type: string
              description: Hostname of the DNS record
            target:
              type: string
              description: Target of the DNS record (e.g., CNAME target or IP address)
            service:
              type: string
              description: The service associated with the DNS record
            protocol:
              type: string
              description: Protocol used (e.g., TCP, UDP)
            weight:
              type: integer
              description: Weight used for DNS load balancing
            priority:
              type: integer
              description: Priority of the DNS record
            port:
              type: integer
              description: Port number associated with the service

    VpsDnsSrvRecordResponse:
      type: object
      properties:
        data:
          type: array
          items:
            properties:
              id:
                type: integer
                description: Unique identifier for the DNS record
              uuid:
                type: string
                format: uuid
                description: Universally unique identifier for the DNS record
              zone_id:
                type: integer
                description: ID of the DNS zone associated with the record
              vps_id:
                type: integer
                description: ID of the VPS associated with the DNS record
              target:
                type: string
                description: Target of the DNS record (e.g., CNAME target or IP address)
              service:
                type: string
                description: The service associated with the DNS record
              protocol:
                type: string
                description: Protocol used (e.g., TCP, UDP)
              weight:
                type: integer
                description: Weight used for DNS load balancing
              priority:
                type: integer
                description: Priority of the DNS record
              port:
                type: integer
                description: Port number associated with the service
        status:
          type: string
          description: "Status of the response"
          default: "success"

    OciEnvironmentVars:
      type: array
      items:
        $ref: '#/components/schemas/OciEnvironmentVar'

    OciEnvironmentVar:
      type: object
      properties:
        name:
          type: string
          description: "Environment variable name"
          default: "foo"
        value:
          type: string
          description: "Environment variable value"
          default: "bar"
        type:
          type: "string"
          description: "Value type"
          default: "custom"

    OciEnvironmentVarsId:
      type: object
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: "OCI environment variable ID"
              default: 1
        - $ref: '#/components/schemas/OciEnvironmentVar'

    Subnet:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the subnet
        net_id:
          type: integer
          description: Identifier for the associated network
        name:
          type: string
          description: Name of the subnet
        type_id:
          type: integer
          description: Identifier for the subnet type
        address:
          type: string
          format: ipv4
          description: IPv4 address of the subnet
        prefix_size:
          type: integer
          description: Prefix size for the IPv4 subnet
        gateway:
          type: string
          format: ipv4
          description: IPv4 gateway address
        address_ipv6:
          type: string
          format: ipv6
          description: IPv6 address of the subnet
        prefix_size_ipv6:
          type: integer
          description: Prefix size for the IPv6 subnet
        gateway_ipv6:
          type: string
          format: ipv6
          description: IPv6 gateway address
        bridge:
          type: string
          description: Bridge interface associated with the subnet
        pool_enabled:
          type: boolean
          description: Indicates if the IP pool is enabled
        default_subnet:
          type: boolean
          description: Indicates if this is the default subnet
        subnet_id:
          type: integer
          description: Identifier for the subnet, if applicable
        private_key_ipv4:
          type: string
          description: Private key for IPv4 configuration
        port_ipv4:
          type: integer
          description: Port number for IPv4 communication
        keep_alive_ipv4:
          type: integer
          description: Keep-alive interval for IPv4 in seconds
        public_access_ipv4:
          type: boolean
          description: Indicates if IPv4 public access is allowed
        routing_interface_ipv4:
          type: string
          description: Routing interface for IPv4 traffic
        private_key_ipv6:
          type: string
          description: Private key for IPv6 configuration
        port_ipv6:
          type: integer
          description: Port number for IPv6 communication
        keep_alive_ipv6:
          type: integer
          description: Keep-alive interval for IPv6 in seconds
        public_access_ipv6:
          type: boolean
          description: Indicates if IPv6 public access is allowed
        routing_interface_ipv6:
          type: string
          description: Routing interface for IPv6 traffic
    SubnetType:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the subnet type
        name:
          type: string
          description: Name of the subnet type
          enum:
            - VIRTNET
            - MIXED
            - MANAGEMENT
            - STORAGE
            - SERVICE
            - MIRROR
        description:
          type: string
          description: Description of subnet type
    SubnetIPAddress:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the subnet IP address
        subnet_id:
          type: integer
          description: Subnet associated with subnet ip address
        address:
          type: string
          description: IP address that is reserved
        partition_id:
          type: integer
          description: Partition IP address is assigned to
        vps_id:
          type: integer
          description: VPS ID where IP address is assigned
        vps_name:
          type: integer
          description: VPS name where IP address is assigned
        mac:
          type: string
          description: MAC address of the interface of assigned IP address

    ServiceType:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the service type
        name:
          type: string
          description: Name of service type
        mark:
          type: string
          description: Mark of service type

    VPSVolume:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the VPS volume
        uuid:
          type: string
          format: uuid
          description: Universally unique identifier for the volume
        storage_pool_id:
          type: integer
          description: ID of the storage pool associated with the volume
        partition_id:
          type: integer
          description: ID of the partition that the volume belongs to
        iqn:
          type: string
          description: iSCSI Qualified Name (IQN) for the volume
        size:
          type: integer
          description: Size of the volume in GB
        storage_location:
          type: string
          enum:
            - LOCAL
            - NETWORK
          description: Location of the storage (local or network)
        type:
          type: string
          enum:
            - STANDALONE
            - OVERLAY
          description: Type of volume (standalone or overlay)
        origin_snap_uuid:
          type: string
          description: UUID of the snapshot the volume originated from
        used:
          type: number
          format: float
          description: Amount of space used by the volume (in GB)
        usedds:
          type: number
          format: float
          description: Amount of space used by the dataset (in GB)
        usedsnap:
          type: number
          format: float
          description: Amount of space used by snapshots (in GB)
        disk_used:
          type: number
          format: float
          description: Amount of disk space used by the volume (in GB)
        reclaimable_space:
          type: number
          format: float
          description: Amount of space that can be reclaimed (in GB)

    StoragePool:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the storage pool
        net_id:
          type: integer
          description: Network ID associated with the storage pool
        host_id:
          type: integer
          description: Host ID where the storage resides
        name:
          type: string
          description: Name of the storage pool
        storage_type:
          type: string
          enum:
            - LOCAL
            - NETWORK
          description: Type of storage (LOCAL or NETWORK)
        size:
          type: number
          format: float
          description: Total size of the storage pool in GB
        used:
          type: number
          format: float
          description: Space currently used in the pool (GB)
        logical_used:
          type: number
          format: float
          description: Logical space used in the pool (GB)
        usedds:
          type: number
          format: float
          description: Dataset space used in the pool (GB)
        usedsnap:
          type: number
          format: float
          description: Space used by snapshots (GB)
        available:
          type: number
          format: float
          description: Available space in the pool (GB)
        health:
          type: string
          enum:
            - ONLINE
            - DEGRADED
            - FAULTED
            - UNAVAIL
            - CHKFAILED
            - DREPLACED
          description: Health status of the storage pool
        status:
          type: string
          enum:
            - OK
            - WARNING
            - ERROR
          description: Operational status of the storage pool
        write_errors:
          type: integer
          description: Number of write errors recorded
        read_errors:
          type: integer
          description: Number of read errors recorded
        cksum_errors:
          type: integer
          description: Number of checksum errors recorded
        fragmentation:
          type: integer
          description: Percentage of fragmentation
        disks_type:
          type: string
          enum:
            - HDD
            - SSD
          description: Type of disks used in the pool (HDD or SSD)
        ds_size:
          type: number
          format: float
          description: Dataset size in the storage pool (GB)
        host_name:
          type: string
          description: Name of the host associated with the storage pool
        last_stat_time:
          type: integer
          format: int64
          description: Timestamp of the last statistics collection

    Snapshot:
      type: object
      properties:
        name:
          type: string
          description: "Snapshot name"
        description:
          type: string
          description: "Snapshot description"
    
    SnapshotResponseSingle:
       allOf:
        - $ref: '#/components/schemas/Snapshot'
        - type: object
          properties:
            id:
              type: integer
              description: "Snapshot ID"
            uuid:
              type: string
              description: "Snapshot UUID"
            created_at:
              type: integer
              description: "Snapshot creation timestamp"
    
    SnapshotResponseMultiple:
      type: array
      items:
        $ref: '#/components/schemas/SnapshotResponseSingle'

  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: SW-API-Token
